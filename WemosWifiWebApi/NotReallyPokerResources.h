const PROGMEM char notreallypoker_html[] = { "<html> <head> <meta charset='UTF-8'> <meta name='viewport' content='width=device-width, initial-scale=1.0'> <title>Not Really Poker</title> <link rel='icon' type='image/png' sizes='32x32' href='notreallypoker/Favicon.png' /> <link rel='stylesheet' href='notreallypoker/style.css' type='text/css' /> <script type='text/javascript' src='notreallypoker/common.js'></script> </head> <body> <div class='content'> <img id='logoImage' src='notreallypoker/logo.png' draggable='false'></img> <div id='loginContainer'> <label for='player'>Table Name</label><input id='inputTable' name='player' placeholder='Table Name' maxlength='15' /><br /> <label for='table'>Player Name</label><input id='inputPlayer' name='table' placeholder='Player Name' maxlength='15' /><br /> <button type='button' class='loginButton' onclick='javascript:sendLogin(true)'>&#127183;&ensp;Enter as player</button> <button type='button' class='loginButton' onclick='javascript:sendLogin(false)'>&#128064;&nbsp;Enter as expectator</button> <div id='loginError'></div> </div> <div id='gameContainer'> <div id='tableNameContainer'> <button class='topbarButton iconExit' title='Exit table' onclick='onExitTable()'></button> <button class='topbarButton iconShare' id='shareButton' title='Share table' onclick='onShareTable()'></button> <h1 class='tableName'>This Table</h1> </div> <div class='tableContainer'> <div id='tableCardsContainer'> </div> <div class='table'> <button id='btnRevealCards' class='tableButton' value='Reveal Cards' onclick='javascript:clickCardRevelation()'></button> <button id='btnNewGame' class='tableButton' value='New Game' disabled='disabled' onclick='javascript:clickGameReset()'></button> </div> </div> <div id='playerCards'> <div id='playerCardsContainer'> </div> </div> <div id='staticsContainer'> <div class='staticsContent'> <div class='minCardDiv'>Min <div id='minCard'></div> </div> <div class='averageCardDiv'>AVG <div id='averageCard'></div> </div> <div class='maxCardDiv'>Max <div id='maxCard'></div> </div> <div class='extraCardDiv'> <div id='coffeCards'></div> <div id='questionCards'></div> <div id='noVoteCards'></div> <div id='aggreementCards'></div> </div> </div> </div> </div> </div> <div id='errorLayer'> <div class='errorContainer'> <div id='errorText' class='errorSquare'>Error...</div> <button class='errorButton' onclick='javascript:showError(false)'>Accept Error and reload page</button> </div> </div> <div id='loadingLayer'> <div class='loadingCircles loadingCircle1 rotate'> <div class='loadingCircles loadingCircle2 rotate'> <div class='loadingCircles loadingCircle3 rotate'> </div> </div> </div> <div class='loadingText'>Loading...</div> </div> <img style='opacity: 0;' src='notreallypoker/card.gif'></img> </body></html>" };

const PROGMEM char notreallypoker_js[] = { "let connection,loginContainer,gameContainer,loadingLayer,errorLayer,errorText,playerCards,playerCardsContainer,tableCardsContainer,staticsContainer,btnNewGame,btnRevealCards,isConnected=!1,myId=0,ping=6e4,allPlayers=new Array,areCardsRevealed=!1,isRevealCardsSent=!1,isExpectator=!1,currentTable='',loadingStack=0;function switchScreen(e){if(e){const e=new URLSearchParams(window.location.search),a=document.getElementById('inputTable'),t=document.getElementById('inputPlayer');currentTable=e.get('table'),a.value=currentTable,t.value=e.get('player'),0===a.value.length?a.focus():0===t.value.length&&t.focus(),loginContainer.style.display='block',logoImage.style.display='block',gameContainer.style.display='none'}else loginContainer.style.display='none',gameContainer.style.display='block',logoImage.style.display='none',isExpectator||(switchBottomPanel(null,playerCards),setTimeout(generateAndShowPlayerCards,410))}function showLoading(e){loadingStack+=e?1:-1,e?loadingLayer.style.display='block':loadingStack<=0&&(loadingStack=0,loadingLayer.style.display='none')}function showError(e){!1===e?(errorLayer.style.display='none',location.reload()):(errorLayer.style.display='block',errorText.textContent=e)}function showLoginError(e){loginError=document.getElementById('loginError'),loginError.textContent=e,loginError.style.display=0==e.length?'none':'block'}function sendPing(){ping>=1e4&&(connection.send(new Uint8Array([9])),setTimeout(sendPing,ping))}function webSocketConect(){showLoading(!0),connection=new WebSocket('ws:'+location.hostname+':8088/',['arduino']),connection.onerror=function(e){showError(`Error: ${e}`),isConnected=!1,console.log('WebSocket Error, ERROR!!! WHY?!?! ',e)},connection.onclose=function(){switchScreen(!0),myId=-1,isConnected=!1,showLoading(!1),console.log('Connection closed'),setTimeout((()=>showError('Connection lost.')),500)},connection.onmessage=function(e){!function(e){console.log('MESSAGE: '+e.data);let a=JSON.parse(e.data);if(showLoading(!1),void 0!==a.yourId)console.log('Connection open. Id: '+myId),isConnected=!0,myId=a.yourId,ping=1e3*a.ping,setTimeout(sendPing,ping),switchScreen(!0);else if(void 0!==a.disconnectedId)playerDisconnected(a.disconnectedId);else if(void 0!==a.connectedId)a.connectedId!=myId&&playerConnected(a.connectedId,a.name);else if(void 0!==a.a){switch(a.a){case 1:void 0!==a.tp?(switchScreen(!1),allPlayers=new Array,a.tp.forEach(((e,a,t)=>{allPlayers.push({id:e.id,name:e.n,card:void 0!==e.c?e.c:0})}))):void 0!==a.n&&a.id!=myId&&allPlayers.push({id:a.id,name:a.n,card:void 0!==a.c?a.c:0}),RearangeTableCards();break;case 2:a.id==myId?playerCardSelected(a.c):tableCardSelected(a.id,a.c);break;case 3:void 0!==a.tc&&(a.tc.forEach(((e,a,t)=>{const n=allPlayers.find((a=>a.id===e.id));n&&(n.card=e.c)})),receivedRevealTableCards());break;case 4:receivedResetGame()}}else if(void 0!==a.e&&a.e>0){let e='Unexpected Error.';switch(a.e){case 1:e='Player name is already present in the table';break;case 2:e='Player already in another table or all slots are full.';break;case 30:e='The process to choose a card failed.';break;case 31:e='The process to reset players cards failed.';break;case 104:case 105:e='Invalid data was sent.'}a.e<10?showLoginError(e):showError(e)}}(e)}}function sendJson(e,a=!1){a&&showLoading(!0);let t=JSON.stringify(e);console.log('SendingMessage: '+t),connection.send(t)}function sendLogin(e){if(void 0===inputTable.value||void 0===inputPlayer.value||0==inputTable.value.length||0==inputPlayer.value.length)return void showLoginError('Both table and user must be introduced.');if(inputTable.value.length>15||inputPlayer.value.length>15)return void showLoginError('Both player and table name must be 15 characters or shorter.');currentTable=inputTable.value,isExpectator=!e,document.getElementById('tableNameContainer').lastElementChild.textContent=`${inputTable.value} - ${inputPlayer.value}`,sendJson({action:1,table:currentTable,player:inputPlayer.value,expectator:!e},!0)}function sendCardSelected(e){sendJson({action:2,cardNumber:e})}function sendRevealCards(){sendJson({action:3})}function sendGameReset(){sendJson({action:4})}function clickCardRevelation(){btnRevealCards.classList.contains('btnConfirmation')?(btnRevealCards.classList.remove('btnConfirmation'),btnRevealCards.setAttribute('disabled','disabled'),btnRevealCards.style.display='none',sendRevealCards(),isRevealCardsSent=!0):(btnRevealCards.classList.add('btnConfirmation'),setTimeout((()=>{btnRevealCards.classList.remove('btnConfirmation')}),1500))}function clickGameReset(){btnNewGame.classList.contains('btnConfirmation')?(btnNewGame.classList.remove('btnConfirmation'),btnNewGame.setAttribute('disabled','disabled'),btnNewGame.style.display='none',sendGameReset()):(btnNewGame.classList.add('btnConfirmation'),setTimeout((()=>{btnNewGame.classList.remove('btnConfirmation')}),1100))}function receivedResetGame(){isRevealCardsSent=!1,areCardsRevealed=!1,btnNewGame.style.display='none',btnRevealCards.style.display='block',btnRevealCards.removeAttribute('disabled'),allPlayers.forEach((e=>{e.card>0&&(e.card=0)})),switchBottomPanel(staticsContainer,isExpectator?null:playerCards),RearangeTableCards(),generateAndShowPlayerCards()}function receivedRevealTableCards(){areCardsRevealed||(areCardsRevealed=!0,btnRevealCards.style.display='block',btnNewGame.style.display='none',btnRevealCards.removeAttribute('disabled'),btnRevealCards.style.display='none',btnNewGame.style.display='block',btnNewGame.removeAttribute('disabled'),switchBottomPanel(isExpectator?null:playerCards,staticsContainer),calculateStatics(),RearangeTableCards())}function switchBottomPanel(e,a){null!=e&&(e.style.opacity=0,e.style.bottom='-100px',setTimeout((()=>{e.style.display='none'}),500)),null!=a&&setTimeout((()=>{a.style.display='block',setTimeout((()=>{a.style.bottom='0',a.style.opacity=1}),1)}),400)}function playerDisconnected(e){RemoveTableCard(e),allPlayers=allPlayers.filter((a=>a.id!=e)),RearangeTableCards()}function playerConnected(e,a){const t={id:e,name:a,card:0};allPlayers.push(t),AddOrGetTableCard(t),RearangeTableCards()}function calculateStatics(){let e=0,a=0,t=999,n=0,r=0,o=0,l=0,d=0,s=0,i={};if(allPlayers.forEach(((s,c,m)=>{const C=s.card;C>0?(e++,i[`${C}`]||(i[`${C}`]=0),i[`${C}`]++,C<1e3?(a++,d+=C,C<t&&(t=C),C>n&&(n=C)):1e3===C?r++:1001===C&&o++):0===C&&l++})),e>0){let a=0,t=0;for(var c in i)i[c]>t&&(t=i[c],a=c);s=Math.round(i[a]/e*100)}console.log(i);let m=0===a?0:Math.round(d/a*10)/10;document.getElementById('maxCard').textContent=`${0===n?'-':n}`,document.getElementById('minCard').textContent=`${999===t?'-':t}`,document.getElementById('averageCard').textContent=`${0===m?'-':m}`,document.getElementById('coffeCards').innerHTML=`&#9749 ${r}`,document.getElementById('questionCards').innerHTML=`&#10068 ${o}`,document.getElementById('noVoteCards').innerHTML=`&#10060 ${l}`,document.getElementById('aggreementCards').innerHTML=`&#128077 ${s}%`}function AddOrGetTableCard(e){let a=`tableCard${e.id}`,t=document.getElementById(a);if(!t){t=document.createElement('div'),t.id=a,t.classList.add('tableCard'),t.style.opacity=0,setTimeout((()=>t.style.opacity=1),50);const n=document.createElement('div');n.className='tableCardLabel',n.textContent=e.name,t.appendChild(n);const r=document.createElement('div');r.className='tableCardBg',t.appendChild(r);const o=document.createElement('div');o.id=`tableCardNumber${e.id}`,o.className='tableCardNumber',-1===e.card&&(t.classList.add('tableCardObserver'),o.innerHTML='&#128374;'),r.appendChild(o),tableCardsContainer.appendChild(t)}return t}function setTableCardNumber(e,a){let t=document.getElementById(`tableCardNumber${e}`);0===a?t.innerHTML=areCardsRevealed?'&#10060;':'&#8987;':a>0&&(areCardsRevealed?setTimeout((()=>{t.innerHTML=1e3===a?'&#9749':1001===a?'&#10068':a}),200):t.innerHTML='')}function RemoveTableCard(e){const a=document.getElementById(`tableCard${e}`);a&&(a.style.opacity=0,a.id=`${a.id}toDelete${Math.random()}`,setTimeout((()=>a.remove()),500))}function RearangeTableCards(){allPlayers.forEach(((e,a,t)=>{const n=AddOrGetTableCard(e);setTableCardNumber(e.id,e.card);const r=(a*(360/allPlayers.length)-90)*(Math.PI/180),o=180*Math.cos(r)+50,l=180*Math.sin(r)+50;n.style.transform=`translate(-50%, -50%) translate(${o-50}px, ${l+60}px)`;const d=n.classList.contains('tableCardShown');n.classList.remove('tableCardShown'),n.classList.remove('tableCardShowning'),n.classList.remove('tableCardHidden'),n.classList.remove('tableCardNotSelected'),0===e.card?n.classList.add('tableCardNotSelected'):e.card>0&&(areCardsRevealed?d?n.classList.add('tableCardShown'):(n.classList.add('tableCardHidden'),n.classList.add('tableCardShowning'),setTimeout((()=>{n.classList.add('tableCardShown'),n.classList.remove('tableCardHidden')}),200)):n.classList.add('tableCardHidden'))}))}function tableCardSelected(e,a){const t=allPlayers.find((a=>a.id===e));t&&(t.card=a),RearangeTableCards()}function playerCardSelected(e){for(const a of playerCardsContainer.children)a.classList.remove('playerCardLoading'),a.getAttribute('number')==e?a.classList.add('playerCardSelected'):a.classList.remove('playerCardSelected');tableCardSelected(myId,e)}function addPlayerCard(e,a,t=0,n=1){const r=document.createElement('div');r.id=`playerCard${a}`,r.classList.add('playerCard'),r.classList.add('playerCardHidden'),r.setAttribute('number',a),r.onclick=function(){isRevealCardsSent||(r.classList.add('playerCardLoading'),sendCardSelected(a))},r.style.marginRight='-40px';const o=document.createElement('div');o.className='playerCardBg',r.appendChild(o);const l=document.createElement('div');l.id=`playerCardNumber${a}`,l.className='playerCardNumber',o.appendChild(l),playerCardsContainer.appendChild(r),setTimeout((()=>{r.style.marginRight='5px'}),850+50*t),setTimeout((()=>{r.classList.add('playerCardShowing'),setTimeout((()=>{l.innerHTML=e,r.classList.add('playerCardShown')}),200)}),850+50*t+50*n)}function fibonacci(e){return e<=1?e:fibonacci(e-1)+fibonacci(e-2)}function generateAndShowPlayerCards(){if(!isExpectator){console.log('generateAndShowPlayerCards'),playerCardsContainer.innerHTML='';const e=12,a=Math.min(window.innerWidth-40,47*e),t=70*Math.ceil(47*e/a);console.log(`minwidth ${a}, cardsRows ${t}`),playerCardsContainer.style.minWidth=`${a}px`,playerCardsContainer.style.minHeight=`${Math.max(70,t)}px`;for(let a=2;a<=e-1;a++){const t=fibonacci(a);addPlayerCard(t,t,a-1,e)}addPlayerCard('&#9749;',1e3,10,e),addPlayerCard('&#10068;',1001,11,e)}}function onExitTable(){location.reload()}function onShareTable(){let e=location.host.length>0?'http://'+location.host+'/notreallypoker':location;e+='?table='+currentTable,navigator.clipboard.writeText(e),shareButton=document.getElementById('shareButton'),shareButton.classList.contains('btnShareConfirmation')&&shareButton.classList.remove('btnShareConfirmation'),shareButton.classList.add('btnShareConfirmation'),setTimeout((()=>{shareButton.classList.remove('btnShareConfirmation')}),1200)}window.onload=function(){console.log('Windowd Loaded'),loginContainer=document.getElementById('loginContainer'),logoImage=document.getElementById('logoImage'),gameContainer=document.getElementById('gameContainer'),tableCardsContainer=document.getElementById('tableCardsContainer'),playerCards=document.getElementById('playerCards'),playerCardsContainer=document.getElementById('playerCardsContainer'),staticsContainer=document.getElementById('staticsContainer'),btnNewGame=document.getElementById('btnNewGame'),btnRevealCards=document.getElementById('btnRevealCards'),loadingLayer=document.getElementById('loadingLayer'),errorLayer=document.getElementById('errorLayer'),errorText=document.getElementById('errorText'),RearangeTableCards(),webSocketConect()};" };

const PROGMEM char notreallypoker_css[] = { ".playerCardShowing .playerCardBg,.tableCardShowning .tableCardBg{animation:.4s cubic-bezier(.455,.030,.515,.955) both flip-vertical-right}body{font-family:Arial;margin:0}#gameContainer{display:none}#logoImage{display:block;margin:3em auto;width:300px;background:repeating-linear-gradient(45deg,#ff5959,#ff9f5f,#ffff62,#5fff5f,#59ffff,#5f5fff,#a163db,#a953ce,#ff5959,#ff9f5f,#ffff62,#5fff5f);background-size:500px 190px;animation:1s linear infinite rainbowGradient}@keyframes rainbowGradient{0%{background-position:0 0}100%{background-position:250% 0}}#loginContainer{width:300px;margin:1em auto 0;padding:1em;border-radius:1em;border:3px solid #5283ff;box-shadow:0 5px 20px 5px gray}#loginContainer *{font-size:1.2em;text-align:left}#loginContainer label{width:100%;font-weight:700}#loginContainer input{width:100%;text-align:center;margin-top:.4em;margin-bottom:1em;line-height:2em;border:none;border-radius:.2em;background-color:#eee}#loginContainer button,.errorContainer button{font-size:1.2em;line-height:2em;margin:.5em auto 0;border:none;padding:0 1em}#loginContainer input:focus{outline:0}#loginContainer button{display:block;color:#fff;width:100%;background-color:#5283ff;border-radius:.2em;cursor:pointer}#loginContainer button:hover,.tableButton:hover{background-color:#5255ff}#loginContainer button:active,.tableButton:active{background-color:#29c336}#loginContainer #loginError{font-size:1em;display:none;margin:1em auto 0;border-radius:.5em;color:#fff;background-color:#aa1d1d;padding:1em}#tableNameContainer{width:100%;margin:0 auto 2em;border-bottom:2px solid #5255ff;text-align:center;display:block;background-color:#fff;box-shadow:0 0 10px 10px gray;line-height:2em}.tableName{margin:auto;line-height:2em;padding-left:3em}.loadingCircle,.loadingCircles{line-height:90px;color:#fff;text-align:center}.tableContainer{width:200px;position:relative;text-align:center;margin:180px auto 0}.table{overflow:hidden;margin:auto;width:200px;height:200px;display:inline-block}#btnNewGame,#btnRevealCards{font-size:1.9em;cursor:pointer}#btnRevealCards::after{content:'Reveal Cards'}#btnNewGame::after{content:'New votation'}#btnNewGame.btnConfirmation::after,#btnRevealCards.btnConfirmation::after{content:'Confirm?'}.tableButton{display:block;width:100%;height:100%;border-radius:50%;border:5px solid #5283ff;color:#fff;font-size:2em;background-color:#6893ff;transition:.25s}.btnConfirmation{background-color:#38a511;border-color:#5db63c;animation:1s ease-out .5s both color-change-confirmationButton}@keyframes color-change-confirmationButton{0%,50%{background-color:#38a511;border-color:#5db63c}100%{background-color:#5255ff;border-color:#5283ff}}#tableCardsContainer{position:relative;display:block}#errorLayer,#loadingLayer{top:0;left:0;display:none;position:absolute;width:100%;height:100%;background-color:#000a;z-index:1000;backdrop-filter:blur(5px)}.loadingCircle{width:100px;height:100px;margin:200px auto auto;border-radius:50px;background-color:#3b7ee2}.loadingCircles{margin:0;border:10px solid;position:relative;border-radius:50%;box-sizing:border-box;padding:20px}.loadingCircle1{margin:200px auto 0;width:200px;height:200px;border-color:#3b7ee2;border-bottom:none;border-left:none}.loadingCircle2{height:100%;width:100%;border-color:#00d9ff;border-top:none;border-right:none}.loadingCircle3{height:100%;width:100%;border-color:#4d9dde;border-bottom:none;border-left:none}.loadingText{font-size:2em;width:5em;margin:1em auto 0;text-align:center;background:repeating-linear-gradient(90deg,#c0c0ff,#c0c0ff,#efefff,#c0c0ff,#c0c0ff);background-origin:border-box;background-clip:text;color:transparent;animation:1s linear infinite loadingGradient;background-size:5em 5em}@keyframes loadingGradient{0%{background-position-x:0em}100%{background-position-x:5em}}#errorLayer{background-color:#f00a}.errorContainer{width:400px;font-size:1em;margin:30vh auto 0;border-radius:1em;color:#fff;background-color:rgba(255,0,0,.34);padding:1em;border:3px solid #7e1c1c;box-shadow:0 5px 20px 5px #7e3838;position:relative}.errorButton{cursor:pointer}.errorContainer .errorSquare{display:block;margin:0 auto;border-radius:.2em;background-color:#bc2a2a;text-align:center;padding:1em;font-size:1.5em;color:#fff}.errorContainer button{display:block;color:#fff;width:100%;background-color:#7e1c1c;border-radius:.2em}.errorContainer button:hover{background-color:#a33232}.errorContainer button:active{background-color:#641818}.rotate{animation:2s linear infinite rotation}.topbarButton{border:none;padding:0;margin:0;background-color:transparent;background-repeat:no-repeat;background-size:75%;background-position:center;float:right;height:4.75em;width:4.75em;cursor:pointer;transition:.25s linear}.topbarButton:hover{background-color:#dfdfdf}.iconShare{background-image:url('share.gif');color:#fff}.iconExit{background-image:url('exitTable.png')}.btnShareConfirmation,.btnShareConfirmation:hover{background-color:#6893ff;width:15em;background-size:0;font-weight:700}.btnShareConfirmation::before{content:'Copied to clipboard'}@keyframes color-change-shareButton{0%{width:4.75em;background-color:#c5ffb0}10%{background-size:0}50%{background-size:0;width:9em;background-color:#c5ffb0}100%{background-size:100%;width:4.75em;background-color:rgba(255,255,255,0)}}@keyframes rotation{0%{transform:rotate(0)}100%{transform:rotate(359deg)}}#playerCards,#staticsContainer{position:fixed;width:100%;text-align:center;display:none;opacity:0;bottom:-200px;transition:.25s linear;box-shadow:0 0 10px 10px gray;border-top:2px solid #5255ff;user-select:none}.staticsContent{margin:0 auto;padding:1em;width:400px;text-align:center;vertical-align:middle}.averageCardDiv,.maxCardDiv,.minCardDiv{display:inline-block;padding:1em;font-size:1em;width:3em;height:3em;border-radius:3em;border:6px solid #6466ff;margin:0 auto}.maxCardDiv,.minCardDiv{border:6px solid #6466ff;height:2em;width:3.5em;padding:.2em .2em .5em}.minCardDiv{border-right:none;border-radius:3em .5em .5em 3em;padding-right:0;margin-right:-.3em}.maxCardDiv{border-left:none;border-radius:.5em 3em 3em .5em;padding-left:0;margin-left:-.3em}#averageCard{font-size:1.5em}.extraCardDiv div{display:inline-block;border:2px solid #6466ff;border-radius:.2em;padding:.2em;margin-top:.5em}#playerCardsContainer{padding:20px;text-align:left;display:inline-block;position:relative;margin:auto}.playerCard,.tableCard{width:35px;height:58px;text-align:center;vertical-align:middle;line-height:58px;transition:.25s ease-out;font-size:1.2em;user-select:none}.playerCard{display:inline-block;cursor:pointer;margin:6px}.tableCard{margin:auto;position:absolute;top:50%;left:50%;z-index:10;background:0 0}.playerCardBg,.tableCardBg{text-align:center;margin:-1 0 0 -1;border:2px solid #416ffb;border-radius:10px;background-color:#fff;height:58px;width:35px}.tableCardObserver .tableCardBg{border-color:gray;border-style:dashed;background-color:#d9d9d9}.tableCardNotSelected .tableCardBg{border:none;padding:0;margin:0;background-color:#d9d9d9;background-image:url('card.gif');background-size:100%;background-blend-mode:lighten}.playerCardHidden .playerCardBg,.tableCardHidden .tableCardBg{background-color:#a2d6fe;background-image:url('card.gif');background-size:100%;background-blend-mode:lighten}.tableCardLabel{width:150px;left:-55px;top:-1.5em;text-align:center;margin:auto;position:absolute;line-height:1em;white-space:nowrap}.playerCardLoading{margin-top:5px;margin-bottom:-5px}.playerCardLoading .playerCardBg{box-shadow:0 0 3px 1px gray}.playerCardSelected{margin-top:-20px}.playerCardSelected .playerCardBg{box-shadow:0 5px 5px 3px gray}.playerCardHidden .playerCardBg{z-index:3}.playerCardShowing .playerCardBg{z-index:2}.playerCardShown .playerCardBg{background:#fff;z-index:1}.tableCardNotSelected .tableCardNumber{font-size:1.2em;color:transparent;text-shadow:0 0 0 #ababab}.tableCardObserver .tableCardNumber{font-size:1.3em;color:transparent;text-shadow:0 0 0 #ababab}@keyframes flip-vertical-right{0%{transform:rotateY(180deg)}100%{transform:rotateY(0)}}@media only screen and (max-width:1000px){#loginContainer,#logoImage,.errorContainer{width:80vw;background-size:160vw 60vw;animation-duration:1s}@keyframes rainbowGradient{0%{background-position:0 0}100%{background-position:-160vw 0}}.tableContainer{width:90vw;position:relative;text-align:center;margin:20vh auto 0}.staticsContent{width:90vw}}" };

const PROGMEM unsigned int notreallypoker_Logo_BinarySize = 5186;
const PROGMEM char notreallypoker_Logo_BinaryImage[] = { 0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x01, 0x2C, 0x00, 0x00, 0x00, 0xB4, 0x08, 0x03, 0x00, 0x00, 0x00, 0x19, 0xE1, 0xE1, 0xDD, 0x00, 0x00, 0x01, 0x84, 0x69, 0x43, 0x43, 0x50, 0x49, 0x43, 0x43, 0x20, 0x70, 0x72, 0x6F, 0x66, 0x69, 0x6C, 0x65, 0x00, 0x00, 0x28, 0x91, 0x7D, 0x91, 0x3D, 0x48, 0xC3, 0x50, 0x14, 0x85, 0x4F, 0x53, 0xA5, 0x2A, 0x15, 0x07, 0x3B, 0x48, 0x71, 0xC8, 0x50, 0x9D, 0x2C, 0x48, 0x15, 0x71, 0x94, 0x2A, 0x16, 0xC1, 0x42, 0x69, 0x2B, 0xB4, 0xEA, 0x60, 0xF2, 0xD2, 0x3F, 0x68, 0xD2, 0x90, 0xA4, 0xB8, 0x38, 0x0A, 0xAE, 0x05, 0x07, 0x7F, 0x16, 0xAB, 0x0E, 0x2E, 0xCE, 0xBA, 0x3A, 0xB8, 0x0A, 0x82, 0xE0, 0x0F, 0x88, 0xAB, 0x8B, 0x93, 0xA2, 0x8B, 0x94, 0x78, 0x5F, 0x52, 0x68, 0x11, 0xE3, 0x83, 0xC7, 0xFB, 0x38, 0xEF, 0x9D, 0xC3, 0x7D, 0xF7, 0x02, 0x42, 0xB3, 0xCA, 0x54, 0xB3, 0x67, 0x12, 0x50, 0x35, 0xCB, 0x48, 0x27, 0xE2, 0x62, 0x2E, 0xBF, 0x2A, 0x06, 0x5E, 0xD1, 0x0F, 0x3F, 0x80, 0x30, 0x62, 0x12, 0x33, 0xF5, 0x64, 0x66, 0x31, 0x0B, 0xCF, 0xF5, 0x75, 0x0F, 0x1F, 0x3F, 0xEF, 0xA2, 0x3C, 0xCB, 0xFB, 0xDD, 0x9F, 0x6B, 0x50, 0x29, 0x98, 0x0C, 0xF0, 0x89, 0xC4, 0x73, 0x4C, 0x37, 0x2C, 0xE2, 0x0D, 0xE2, 0x99, 0x4D, 0x4B, 0xE7, 0xBC, 0x4F, 0x1C, 0x62, 0x65, 0x49, 0x21, 0x3E, 0x27, 0x9E, 0x30, 0xA8, 0x40, 0xE2, 0x47, 0xAE, 0xCB, 0x2E, 0xBF, 0x71, 0x2E, 0x39, 0x2C, 0xF0, 0xCC, 0x90, 0x91, 0x4D, 0xCF, 0x13, 0x87, 0x88, 0xC5, 0x52, 0x17, 0xCB, 0x5D, 0xCC, 0xCA, 0x86, 0x4A, 0x3C, 0x4D, 0x1C, 0x51, 0x54, 0x8D, 0xF2, 0x85, 0x9C, 0xCB, 0x0A, 0xE7, 0x2D, 0xCE, 0x6A, 0xB5, 0xCE, 0xDA, 0x75, 0xF2, 0x1F, 0x06, 0x0B, 0xDA, 0x4A, 0x86, 0xEB, 0xB4, 0x47, 0x91, 0xC0, 0x12, 0x92, 0x48, 0x41, 0x84, 0x8C, 0x3A, 0x2A, 0xA8, 0xC2, 0x42, 0x94, 0x4E, 0x8D, 0x14, 0x13, 0x69, 0xBA, 0x8F, 0x7B, 0xF8, 0xC3, 0x8E, 0x3F, 0x45, 0x2E, 0x99, 0x5C, 0x15, 0x30, 0x72, 0x2C, 0xA0, 0x06, 0x15, 0x92, 0xE3, 0x07, 0x9F, 0xC1, 0xEF, 0xDE, 0x9A, 0xC5, 0xA9, 0x98, 0x9B, 0x14, 0x8C, 0x03, 0xBD, 0x2F, 0xB6, 0xFD, 0x31, 0x06, 0x04, 0x76, 0x81, 0x56, 0xC3, 0xB6, 0xBF, 0x8F, 0x6D, 0xBB, 0x75, 0x02, 0xF8, 0x9F, 0x81, 0x2B, 0xAD, 0xE3, 0xAF, 0x35, 0x81, 0xD9, 0x4F, 0xD2, 0x1B, 0x1D, 0x2D, 0x72, 0x04, 0x0C, 0x6D, 0x03, 0x17, 0xD7, 0x1D, 0x4D, 0xDE, 0x03, 0x2E, 0x77, 0x80, 0x91, 0x27, 0x5D, 0x32, 0x24, 0x47, 0xE2, 0xF3, 0x17, 0x8A, 0x45, 0xE0, 0xFD, 0x8C, 0xC6, 0x94, 0x07, 0x86, 0x6F, 0x81, 0x81, 0x35, 0xB7, 0x6F, 0xED, 0x7B, 0x9C, 0x3E, 0x00, 0x59, 0xEA, 0xD5, 0xF2, 0x0D, 0x70, 0x70, 0x08, 0x8C, 0x97, 0x28, 0x7B, 0xDD, 0xE3, 0xDF, 0x7D, 0xDD, 0x7D, 0xFB, 0xF7, 0x4D, 0xBB, 0x7F, 0x3F, 0x6D, 0x4B, 0x72, 0xA5, 0x5E, 0xB3, 0x29, 0xA4, 0x00, 0x00, 0x00, 0x7B, 0x50, 0x4C, 0x54, 0x45, 0xD6, 0x05, 0xE5, 0x00, 0x00, 0x00, 0x0D, 0x0D, 0x0D, 0x12, 0x12, 0x12, 0x19, 0x19, 0x19, 0x24, 0x24, 0x24, 0x2C, 0x2C, 0x2C, 0x33, 0x33, 0x33, 0x3B, 0x3B, 0x3B, 0x41, 0x41, 0x41, 0x46, 0x46, 0x46, 0x4B, 0x4B, 0x4B, 0x52, 0x52, 0x52, 0x56, 0x56, 0x56, 0x5C, 0x5C, 0x5C, 0x62, 0x62, 0x62, 0x65, 0x65, 0x65, 0x6B, 0x6B, 0x6B, 0x73, 0x73, 0x73, 0x7B, 0x7B, 0x7B, 0x82, 0x82, 0x82, 0x86, 0x86, 0x86, 0x8C, 0x8C, 0x8C, 0x92, 0x92, 0x92, 0x95, 0x95, 0x95, 0x9B, 0x9B, 0x9B, 0xA2, 0xA2, 0xA2, 0xA6, 0xA6, 0xA6, 0xAC, 0xAC, 0xAC, 0xB4, 0xB4, 0xB4, 0xBC, 0xBC, 0xBC, 0xC1, 0xC1, 0xC1, 0xC5, 0xC5, 0xC5, 0xCB, 0xCB, 0xCB, 0xD4, 0xD4, 0xD4, 0xDC, 0xDC, 0xDC, 0xE2, 0xE2, 0xE2, 0xE6, 0xE6, 0xE6, 0xEC, 0xEC, 0xEC, 0xF4, 0xF4, 0xF4, 0xFF, 0xFF, 0xFF, 0x6E, 0x28, 0x43, 0x4F, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 0x4E, 0x53, 0x00, 0x40, 0xE6, 0xD8, 0x66, 0x00, 0x00, 0x00, 0x01, 0x62, 0x4B, 0x47, 0x44, 0x00, 0x88, 0x05, 0x1D, 0x48, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0B, 0x13, 0x00, 0x00, 0x0B, 0x13, 0x01, 0x00, 0x9A, 0x9C, 0x18, 0x00, 0x00, 0x00, 0x07, 0x74, 0x49, 0x4D, 0x45, 0x07, 0xE7, 0x09, 0x03, 0x01, 0x24, 0x2A, 0xF3, 0xA1, 0x0E, 0x42, 0x00, 0x00, 0x00, 0x19, 0x74, 0x45, 0x58, 0x74, 0x43, 0x6F, 0x6D, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x47, 0x49, 0x4D, 0x50, 0x57, 0x81, 0x0E, 0x17, 0x00, 0x00, 0x11, 0x8B, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xED, 0x9D, 0x67, 0x83, 0xE2, 0x38, 0x0C, 0x86, 0x31, 0x9B, 0x10, 0x7A, 0xEF, 0x24, 0x81, 0x34, 0xDB, 0xFF, 0xFF, 0x17, 0x1E, 0x4E, 0xB3, 0xE4, 0x92, 0xC0, 0xCC, 0xEE, 0x0D, 0x30, 0xF1, 0x87, 0xBB, 0x99, 0xA1, 0x2C, 0x79, 0x90, 0x65, 0xE9, 0x95, 0xEC, 0xF4, 0x78, 0x37, 0x9A, 0x06, 0x63, 0x4C, 0xFE, 0xD2, 0xEB, 0x78, 0xD8, 0x41, 0x25, 0x47, 0x77, 0x46, 0x66, 0x9B, 0xB8, 0x83, 0xD5, 0x46, 0x2A, 0xDE, 0x8F, 0x49, 0x39, 0x56, 0x59, 0x07, 0xAB, 0x09, 0x55, 0x38, 0x77, 0x0B, 0x50, 0x3D, 0xF1, 0x1F, 0x37, 0xED, 0x60, 0x59, 0x47, 0xB4, 0x76, 0x48, 0xC5, 0x2A, 0xA7, 0xB5, 0xA4, 0x1D, 0x2C, 0xF3, 0xA0, 0xA7, 0xDC, 0xAA, 0x7A, 0xD5, 0x10, 0xBF, 0x1C, 0x3B, 0x58, 0xC6, 0x11, 0x4F, 0x2B, 0x9B, 0x02, 0xB4, 0xBC, 0xA4, 0x83, 0x65, 0x18, 0x7E, 0x1F, 0x93, 0x2A, 0x69, 0x6D, 0x3A, 0x58, 0xE5, 0xC8, 0xA2, 0x98, 0x56, 0xAC, 0x9C, 0xD2, 0x53, 0x41, 0x56, 0x77, 0x5A, 0x43, 0xDA, 0xC1, 0x12, 0x2B, 0x9F, 0x3F, 0x14, 0x0B, 0xDE, 0x2E, 0xC7, 0x75, 0x46, 0xDE, 0x0A, 0xF0, 0xEA, 0x87, 0x1D, 0xAC, 0xBB, 0x3B, 0xF7, 0xCA, 0x85, 0x6F, 0x7E, 0xA7, 0xE5, 0xDB, 0x58, 0x11, 0xB2, 0xED, 0x60, 0x71, 0xBE, 0xAE, 0x23, 0x84, 0x21, 0x0F, 0x2C, 0xAC, 0x04, 0xAD, 0x29, 0xEB, 0x60, 0xC5, 0x20, 0x9A, 0x3A, 0x0F, 0x25, 0x2B, 0x19, 0x67, 0x55, 0xBF, 0x25, 0x1D, 0xAC, 0x7D, 0xC5, 0x27, 0xE7, 0xD5, 0x53, 0x58, 0x41, 0x76, 0x7E, 0x07, 0x6B, 0x25, 0x79, 0xF4, 0x14, 0x56, 0xB3, 0xDB, 0x06, 0xD2, 0xDA, 0x75, 0xB0, 0x16, 0x26, 0x27, 0x25, 0x50, 0x0D, 0xEE, 0xCB, 0xDF, 0x0D, 0xC6, 0xF1, 0x6B, 0xF6, 0xEB, 0x61, 0xF9, 0x5A, 0x04, 0x5A, 0xB0, 0xDA, 0x0B, 0x1D, 0x8B, 0xBA, 0x70, 0x1E, 0x76, 0x96, 0x15, 0xF7, 0x89, 0x89, 0xD5, 0xA5, 0x08, 0xC1, 0xE6, 0x60, 0x1E, 0x4E, 0x3B, 0xCB, 0xCA, 0x3C, 0x15, 0x96, 0x60, 0x15, 0x96, 0x8F, 0x5E, 0xC0, 0x7A, 0x38, 0xEE, 0x2C, 0x8B, 0x4F, 0x75, 0x58, 0x7D, 0xBF, 0x7A, 0x30, 0xAD, 0xEC, 0xAE, 0x5B, 0x0D, 0xF3, 0x71, 0xC4, 0x71, 0x68, 0xAD, 0xC7, 0x14, 0x63, 0x59, 0xE9, 0x7F, 0xA4, 0x9F, 0x75, 0xB0, 0x78, 0x48, 0x54, 0x85, 0x61, 0x02, 0x6A, 0x14, 0xC9, 0xDD, 0xC5, 0xE7, 0x42, 0xA0, 0x13, 0x75, 0xE9, 0xCE, 0xDD, 0xC3, 0x7B, 0x8A, 0x65, 0xF5, 0x63, 0xC4, 0x72, 0x50, 0xC8, 0xF0, 0x71, 0x27, 0xD1, 0x88, 0x31, 0x56, 0x66, 0xE1, 0x4E, 0x49, 0xB4, 0x83, 0xD3, 0x29, 0x4C, 0xF2, 0x1F, 0x3B, 0x58, 0x7C, 0xAB, 0x28, 0xC8, 0xB1, 0xF5, 0x99, 0x1D, 0xAC, 0x5C, 0x96, 0x01, 0xB4, 0x56, 0xFC, 0xB7, 0xC3, 0x62, 0x2C, 0x4D, 0x92, 0x24, 0xA3, 0x46, 0xA7, 0xE5, 0xA2, 0x7C, 0xF9, 0xFA, 0x9B, 0x61, 0xB1, 0xF4, 0x7A, 0x5C, 0xCF, 0xF3, 0xC5, 0x9F, 0x78, 0xC3, 0x4D, 0xE9, 0x7E, 0xA0, 0x53, 0x9A, 0x20, 0xCB, 0xCA, 0x7E, 0x2D, 0x2C, 0x76, 0x9D, 0x10, 0x75, 0x8C, 0x22, 0xE5, 0x49, 0x48, 0x5B, 0x18, 0xB2, 0x5F, 0x0A, 0x2B, 0xD9, 0x7B, 0xA0, 0x56, 0xDA, 0xAB, 0x34, 0xBE, 0xFE, 0x0A, 0x4F, 0xC7, 0x00, 0x5A, 0xD6, 0x86, 0xFF, 0x4A, 0x58, 0xF1, 0x4A, 0x2A, 0x78, 0x24, 0xD7, 0xAB, 0x4A, 0x85, 0x8F, 0x10, 0x17, 0xAD, 0x78, 0x49, 0x1F, 0x58, 0xD6, 0xE8, 0x37, 0x5A, 0x16, 0xDD, 0x23, 0xA5, 0x53, 0xC9, 0x94, 0x27, 0xD0, 0x73, 0xB1, 0x19, 0x9C, 0x87, 0xF1, 0xEF, 0x83, 0x15, 0x61, 0x0D, 0x1D, 0xD6, 0x00, 0x73, 0x5A, 0x6B, 0x86, 0x9D, 0x96, 0xD4, 0xDA, 0x2F, 0x6F, 0x09, 0x2B, 0x0A, 0xE3, 0xEC, 0xCB, 0x09, 0x5F, 0xDF, 0x5A, 0xA7, 0x29, 0x99, 0x84, 0x38, 0x3D, 0x94, 0x96, 0xB5, 0x79, 0x3F, 0x58, 0xF1, 0xFA, 0x8F, 0x90, 0x76, 0x97, 0x5F, 0xC3, 0xE5, 0x93, 0x46, 0x56, 0x82, 0xC9, 0x1C, 0x98, 0x56, 0x56, 0x3F, 0xFB, 0xFE, 0xFF, 0x71, 0xF6, 0x6E, 0xB0, 0xFC, 0xCA, 0x35, 0x8F, 0xE3, 0xAF, 0xD8, 0x95, 0x63, 0x98, 0x7F, 0x0A, 0xAC, 0x01, 0xF0, 0x5A, 0x42, 0x10, 0x95, 0x36, 0xF7, 0x6E, 0xE9, 0x4E, 0x24, 0x22, 0xC8, 0x72, 0xB0, 0xE7, 0xAD, 0x12, 0xD5, 0xB0, 0xAA, 0x15, 0x50, 0xED, 0x22, 0xF2, 0x71, 0x7A, 0x48, 0x7A, 0xED, 0x4E, 0xEB, 0x25, 0x61, 0x31, 0xB9, 0xDA, 0x13, 0x12, 0x3C, 0xBD, 0x0E, 0x62, 0xED, 0x13, 0xB0, 0x42, 0xB4, 0x8E, 0x30, 0xD2, 0xEA, 0x03, 0xCB, 0x5A, 0xBD, 0x17, 0xAC, 0x18, 0xFA, 0x90, 0xC5, 0xB3, 0xAF, 0xDE, 0x13, 0xAD, 0xAE, 0x7C, 0x27, 0x30, 0x5B, 0x2F, 0xC6, 0xE8, 0xEF, 0x63, 0xF0, 0x92, 0x0C, 0x56, 0x71, 0x26, 0xD9, 0x5B, 0xC1, 0x0A, 0x50, 0xFE, 0x91, 0x7C, 0x95, 0x74, 0xC9, 0x6A, 0x70, 0x8E, 0x33, 0xD1, 0xA0, 0xCD, 0xD8, 0x09, 0x5A, 0xD6, 0x1E, 0xBE, 0x68, 0x0E, 0x1F, 0xB9, 0xBD, 0x1B, 0xAC, 0x9E, 0xF4, 0x21, 0x4F, 0xCE, 0xC3, 0x35, 0x66, 0x35, 0xBD, 0xD5, 0x4E, 0xEF, 0x06, 0x23, 0x75, 0x72, 0x56, 0xAD, 0xB1, 0xEA, 0x2D, 0xC2, 0x8F, 0xBC, 0x3C, 0xAC, 0x1B, 0xBA, 0xDE, 0xCD, 0x53, 0xAF, 0x4D, 0xD1, 0x6B, 0xFB, 0x07, 0x66, 0x8A, 0xA6, 0xC4, 0x63, 0x29, 0xC7, 0x4E, 0x4B, 0xBE, 0x6A, 0xD1, 0x02, 0x2B, 0xFC, 0x93, 0xFC, 0xED, 0x2B, 0x4E, 0xBD, 0x7B, 0x94, 0x9C, 0x0D, 0x57, 0x78, 0x35, 0x63, 0x93, 0xFD, 0x03, 0x2E, 0x1A, 0x29, 0x4C, 0xDE, 0x53, 0xEB, 0xE1, 0x16, 0xD9, 0x15, 0xF0, 0xE2, 0x57, 0xDC, 0xE7, 0x31, 0x57, 0x3E, 0x2C, 0xF0, 0x92, 0xC3, 0xAC, 0x11, 0xD6, 0x42, 0x14, 0xA7, 0xFF, 0xF2, 0x98, 0x89, 0x09, 0x34, 0xC7, 0x4B, 0xB4, 0x70, 0x0E, 0x0F, 0x5C, 0x3C, 0x5B, 0x23, 0x1B, 0x88, 0x9E, 0xF8, 0x57, 0x33, 0x60, 0x3E, 0x48, 0x4E, 0xF7, 0x95, 0x1E, 0x99, 0xAB, 0xF6, 0x69, 0x65, 0xC5, 0xE2, 0xDA, 0x04, 0x4B, 0x4C, 0xF3, 0xC1, 0xDF, 0x86, 0x75, 0x0F, 0x0C, 0x4F, 0xFC, 0x6E, 0x22, 0x07, 0xF5, 0x8B, 0x27, 0x83, 0x56, 0x5A, 0x3E, 0x9A, 0x4B, 0xCF, 0xAC, 0x87, 0x21, 0xEC, 0x20, 0x1A, 0xD7, 0x52, 0x0C, 0x3B, 0x2A, 0xFD, 0x43, 0x6B, 0xE5, 0x33, 0x1C, 0xE1, 0xEB, 0x8E, 0x0D, 0xB0, 0xF2, 0x70, 0x99, 0xDA, 0x3F, 0xC0, 0x95, 0xCC, 0x9E, 0x8F, 0x0C, 0x05, 0xA7, 0xA3, 0x0E, 0x2B, 0x37, 0xE2, 0x75, 0xEB, 0x8A, 0x36, 0x80, 0xF6, 0x41, 0x9E, 0xC8, 0x79, 0x36, 0x90, 0x48, 0xBD, 0x34, 0xB0, 0x9D, 0x12, 0x91, 0x3A, 0x89, 0x76, 0x8D, 0x20, 0x8A, 0x5D, 0xDA, 0x61, 0xB1, 0xBB, 0x0D, 0x38, 0x0D, 0xAC, 0x78, 0x9F, 0xD8, 0x17, 0x88, 0x46, 0x58, 0x06, 0xCB, 0xCA, 0x0D, 0xBE, 0x75, 0x62, 0x31, 0xAC, 0xF4, 0x5E, 0x1F, 0x0F, 0x67, 0xFB, 0xC0, 0xF7, 0xD4, 0xF3, 0x3D, 0x1D, 0xA9, 0x7D, 0x6A, 0x5A, 0x74, 0x90, 0x0E, 0x01, 0x65, 0x27, 0xB3, 0xC2, 0xDA, 0x34, 0xE6, 0x43, 0x05, 0xCC, 0xED, 0xD7, 0x2D, 0xEB, 0x68, 0x08, 0xCF, 0xC7, 0x6D, 0x2F, 0xBE, 0x80, 0xDC, 0xCE, 0x3E, 0x2D, 0xCC, 0xCA, 0x4C, 0xFD, 0xB2, 0xEA, 0x1B, 0x8E, 0xC7, 0xEA, 0x7E, 0x09, 0xC3, 0x77, 0x0F, 0xFB, 0x65, 0x9C, 0xAB, 0x0D, 0x96, 0xF8, 0x32, 0xD6, 0x6D, 0x97, 0xBD, 0xF9, 0x7B, 0x96, 0x95, 0x2F, 0x4B, 0x6D, 0xA6, 0x45, 0x09, 0xF4, 0x21, 0x33, 0xAB, 0xDD, 0xC7, 0xE7, 0xF3, 0x39, 0x66, 0xA6, 0x70, 0x56, 0x5A, 0x80, 0x4F, 0x14, 0xBB, 0x72, 0x4C, 0xD9, 0xDF, 0x09, 0x64, 0x58, 0x64, 0x6F, 0x83, 0x15, 0x15, 0x6F, 0xCB, 0x66, 0x22, 0x83, 0xA4, 0x61, 0x50, 0xFE, 0x13, 0xD9, 0xD5, 0x0F, 0x85, 0x35, 0x86, 0xBE, 0x68, 0xA3, 0x9F, 0xFA, 0x7E, 0x28, 0x3F, 0x31, 0x0B, 0xC4, 0xC5, 0x26, 0x61, 0x50, 0x58, 0x73, 0x1C, 0x04, 0xD7, 0xDA, 0x07, 0xB0, 0x28, 0x28, 0xDE, 0xA2, 0xB6, 0xAC, 0x24, 0xA8, 0xAF, 0xE6, 0x1A, 0x96, 0x53, 0xA5, 0x15, 0xFE, 0x94, 0xF4, 0x81, 0x2D, 0x58, 0xE2, 0x9A, 0x78, 0x59, 0xF4, 0x64, 0x5F, 0x4D, 0xC1, 0x65, 0x99, 0x82, 0xD3, 0xBD, 0xB6, 0x0F, 0xE7, 0xD2, 0x6A, 0x93, 0x0B, 0x66, 0x81, 0x35, 0x2C, 0xC2, 0x86, 0xCB, 0x9D, 0x38, 0x3B, 0x90, 0xA2, 0xE1, 0x9B, 0xD3, 0x42, 0xBF, 0xDE, 0xE7, 0xFE, 0xB8, 0x1A, 0xD0, 0x8B, 0x26, 0x79, 0x17, 0xB4, 0x78, 0xEE, 0xAD, 0x78, 0xB0, 0x9F, 0x5F, 0x50, 0xF1, 0x0E, 0xB9, 0x97, 0xC9, 0x2D, 0xEB, 0xEE, 0xA8, 0xB7, 0xA2, 0x67, 0xBA, 0xFE, 0xDE, 0xD7, 0x85, 0xD7, 0x72, 0xDA, 0x60, 0x1D, 0x88, 0xD1, 0x53, 0xA3, 0x91, 0xE4, 0xFB, 0x91, 0xFE, 0xC0, 0xCB, 0x5F, 0x83, 0x57, 0xE5, 0x0B, 0x5E, 0xB6, 0x54, 0xED, 0xCA, 0x35, 0x5B, 0x75, 0x36, 0x04, 0xDE, 0xCE, 0xB2, 0xA4, 0xF4, 0x58, 0x19, 0xBA, 0x5D, 0xA4, 0x2A, 0x72, 0x29, 0x66, 0x41, 0xFE, 0xA5, 0xCD, 0x4D, 0xB0, 0xE4, 0x9F, 0x5C, 0x7E, 0xAC, 0x7F, 0x4E, 0xB8, 0x7C, 0xDD, 0xDD, 0x74, 0x2A, 0xCB, 0x9A, 0xD4, 0x72, 0x08, 0x2B, 0xDF, 0x24, 0x22, 0x56, 0x5B, 0x81, 0x41, 0x3C, 0xB0, 0x06, 0xA3, 0xCB, 0xCC, 0x06, 0xB2, 0x2B, 0x3B, 0xA8, 0x57, 0x0F, 0x49, 0x45, 0xCC, 0xA5, 0x50, 0xDB, 0xDF, 0xE5, 0xD8, 0xDC, 0xF3, 0xA2, 0xBD, 0xD2, 0xDA, 0x4B, 0xCA, 0x87, 0x02, 0x49, 0x60, 0xC1, 0x07, 0xF5, 0xCF, 0xF1, 0x65, 0x9D, 0xFF, 0x32, 0x99, 0xCF, 0x63, 0x03, 0x2C, 0x92, 0x10, 0xC0, 0x87, 0x42, 0xB2, 0x95, 0xCF, 0x3A, 0xD6, 0x81, 0xC9, 0xA1, 0x72, 0x56, 0xA4, 0x7D, 0x79, 0xA5, 0xA8, 0x07, 0x7D, 0x4E, 0xAD, 0xEA, 0x42, 0x41, 0xCB, 0x29, 0xE6, 0x0D, 0x1B, 0x81, 0x2B, 0x0E, 0x38, 0x2B, 0xF7, 0xC2, 0x11, 0xD0, 0x81, 0x6C, 0x0D, 0x43, 0x4E, 0xD0, 0x96, 0xCD, 0x0B, 0x5A, 0xAF, 0xFA, 0x9A, 0x0B, 0x58, 0xBE, 0x08, 0x81, 0x07, 0xE2, 0xE7, 0x1D, 0xE3, 0xCC, 0x2B, 0x66, 0x90, 0xAB, 0x6A, 0x3C, 0xF9, 0x53, 0x8F, 0x54, 0x5C, 0x90, 0x53, 0x9A, 0xD4, 0x50, 0x3C, 0x55, 0xAC, 0xD0, 0x42, 0x08, 0xCE, 0x25, 0xEE, 0xDA, 0x67, 0x05, 0x95, 0x46, 0x54, 0x5B, 0xE7, 0xFD, 0xC9, 0xB3, 0x76, 0xA7, 0x05, 0xBF, 0xE9, 0xD4, 0x52, 0x92, 0x50, 0x9C, 0x39, 0x73, 0xA1, 0xE2, 0x49, 0x37, 0x68, 0x06, 0xF6, 0xAA, 0xB6, 0xDA, 0x07, 0x16, 0x52, 0xB3, 0xD3, 0xEA, 0x85, 0xE5, 0x0C, 0xF5, 0xCB, 0x54, 0xAA, 0xB4, 0x8E, 0x71, 0x15, 0x0E, 0x33, 0xD1, 0x93, 0xA3, 0x04, 0xD1, 0xA4, 0x34, 0xFC, 0xE2, 0xA9, 0x37, 0xCE, 0xC2, 0x7C, 0xF6, 0xC6, 0x80, 0x4A, 0x22, 0x2D, 0x4B, 0xFC, 0x47, 0x5C, 0xCC, 0xBE, 0x9E, 0x8F, 0xD3, 0x87, 0x82, 0x07, 0x18, 0x97, 0x86, 0x7A, 0x40, 0x83, 0xEA, 0x57, 0xE5, 0x13, 0x28, 0xB4, 0xAC, 0x95, 0xA7, 0x44, 0xED, 0xA4, 0x7F, 0x6E, 0x08, 0xAE, 0xA9, 0x07, 0x33, 0x1E, 0xA3, 0x01, 0xF6, 0x82, 0x72, 0xD9, 0x38, 0x95, 0x12, 0x6E, 0x56, 0x10, 0xC8, 0x9D, 0x40, 0x52, 0x7C, 0xA7, 0x4B, 0xD5, 0x10, 0x2A, 0x28, 0xD7, 0xED, 0x41, 0x18, 0x54, 0x21, 0x98, 0x4F, 0xF3, 0xB7, 0xA0, 0xA5, 0x6F, 0x4A, 0x41, 0x04, 0x2F, 0xBE, 0xB3, 0x65, 0x6E, 0xA0, 0x5E, 0x1D, 0xD3, 0xB4, 0xC2, 0x4A, 0x48, 0x73, 0x9D, 0x58, 0xE9, 0x7D, 0xB9, 0x55, 0x9F, 0x0C, 0xAD, 0x7B, 0x04, 0xE9, 0xA5, 0xA3, 0xF8, 0x71, 0x6D, 0x87, 0x5A, 0x61, 0xD1, 0xD2, 0x03, 0x04, 0xE5, 0x87, 0xAC, 0x1C, 0x70, 0x5A, 0xC0, 0xBA, 0x5B, 0xF3, 0x44, 0x85, 0x15, 0xCB, 0x7F, 0xA0, 0x5F, 0x4E, 0xE0, 0xFC, 0x97, 0xEA, 0xF1, 0x0C, 0xC6, 0x59, 0x62, 0xAE, 0xDE, 0xAE, 0x52, 0x04, 0x78, 0x04, 0x16, 0x45, 0x56, 0x31, 0x66, 0x26, 0x3B, 0xD0, 0xE6, 0x29, 0x9D, 0x99, 0xF7, 0x4B, 0xF4, 0x9A, 0xDD, 0x95, 0x92, 0x1E, 0xDE, 0x9F, 0xED, 0x52, 0xEB, 0x34, 0xA4, 0x45, 0x86, 0x9B, 0x7B, 0xC9, 0x42, 0xED, 0x2F, 0xD6, 0xCE, 0xB4, 0xF8, 0x61, 0xAF, 0x5E, 0x9B, 0x8C, 0x2A, 0xAB, 0xDD, 0xFC, 0xB9, 0xC2, 0x56, 0x5B, 0x20, 0xB2, 0xAC, 0x72, 0x6A, 0x4F, 0xC1, 0x7A, 0x3A, 0x53, 0xE9, 0x9B, 0x06, 0xB2, 0x0B, 0x97, 0x59, 0x73, 0xC0, 0x22, 0x2F, 0x2E, 0xFF, 0x3C, 0xB4, 0xD6, 0xA0, 0xC9, 0x8E, 0xB6, 0x25, 0xA4, 0x8E, 0x8C, 0x1D, 0x2C, 0x0E, 0xFE, 0x56, 0x7E, 0x2D, 0x1B, 0x11, 0x07, 0x48, 0xCB, 0x8A, 0x2B, 0x9F, 0xC7, 0xF2, 0x19, 0x3A, 0xB4, 0xC0, 0xCA, 0xC3, 0xB0, 0x59, 0x54, 0x5F, 0x40, 0x81, 0x63, 0x22, 0x1E, 0xAF, 0xE2, 0xAC, 0x43, 0x99, 0x4B, 0x80, 0x25, 0x70, 0x22, 0x26, 0xED, 0x13, 0x4E, 0x4B, 0xCF, 0xC7, 0x22, 0xC5, 0x1B, 0x55, 0x0F, 0x2F, 0x0D, 0xAC, 0x72, 0xBB, 0xF2, 0x7C, 0x73, 0x2A, 0x07, 0x7F, 0x99, 0xC8, 0xFD, 0x61, 0xB1, 0x3D, 0x74, 0x10, 0x17, 0xBB, 0x2A, 0x55, 0x9A, 0xD2, 0xC1, 0x1F, 0x4A, 0x47, 0x2C, 0x3C, 0xFB, 0x59, 0x15, 0x70, 0xE4, 0xBB, 0x9D, 0x25, 0xB7, 0x2C, 0x3D, 0x57, 0x31, 0xC2, 0x02, 0xFA, 0xF6, 0xA3, 0x7C, 0xD3, 0xEA, 0xA3, 0xFD, 0xB1, 0x26, 0x14, 0xD8, 0x69, 0xD9, 0x14, 0x73, 0xB4, 0xF3, 0x41, 0x3C, 0xBA, 0x64, 0x32, 0x9C, 0x30, 0xDA, 0x95, 0x67, 0xD2, 0xD5, 0xB3, 0xB3, 0xB3, 0x18, 0xFA, 0x92, 0x97, 0x68, 0xC5, 0x75, 0x1C, 0x62, 0x57, 0xB2, 0x7B, 0x59, 0xB9, 0x46, 0xAD, 0x2A, 0xF7, 0x4B, 0x8A, 0x38, 0x72, 0xC7, 0xD2, 0x71, 0x69, 0x74, 0x26, 0x58, 0x11, 0xF0, 0x2C, 0x01, 0x65, 0x54, 0xCC, 0x66, 0x11, 0x2C, 0x0F, 0x12, 0x16, 0x7B, 0x28, 0xCE, 0x3A, 0x54, 0x46, 0x57, 0x1B, 0x16, 0x25, 0xA6, 0xE5, 0xCD, 0x94, 0xBF, 0x03, 0xDB, 0xE1, 0x66, 0xC9, 0x1C, 0x9E, 0x51, 0xA1, 0xAC, 0xA1, 0xC0, 0xCF, 0xAF, 0x0C, 0xEE, 0x8A, 0x9D, 0x8A, 0xB3, 0x1B, 0xD6, 0x98, 0x96, 0xF0, 0x18, 0x76, 0xF1, 0x8F, 0x14, 0x73, 0x62, 0x5D, 0x11, 0xB9, 0xBF, 0x60, 0x56, 0x87, 0x96, 0xF3, 0x32, 0x98, 0x74, 0x2C, 0xB0, 0x0A, 0x0A, 0x95, 0xE3, 0x72, 0x61, 0xB4, 0x3A, 0x80, 0xAA, 0x03, 0x83, 0x92, 0xD9, 0xF1, 0xA1, 0xD2, 0x29, 0x73, 0x61, 0xEC, 0x80, 0x3C, 0x6E, 0xE2, 0x61, 0x8F, 0xB5, 0x47, 0x49, 0xBA, 0xCE, 0xCA, 0x14, 0x31, 0x24, 0x55, 0x6E, 0xE2, 0x00, 0x33, 0x62, 0xE1, 0x76, 0xBB, 0x0F, 0x99, 0x5D, 0x83, 0xDF, 0x15, 0x5E, 0x7C, 0x5B, 0xFA, 0x2C, 0x31, 0xF7, 0x66, 0x49, 0x1D, 0xCB, 0x97, 0xEA, 0xA6, 0xCD, 0x67, 0x95, 0x21, 0x47, 0xE9, 0x91, 0x60, 0x04, 0xBF, 0xCB, 0x65, 0xE5, 0x71, 0x19, 0x5A, 0x25, 0xD0, 0x69, 0x92, 0x47, 0x5C, 0x56, 0xCE, 0x14, 0x5C, 0x32, 0xCC, 0x8F, 0x96, 0x28, 0x06, 0x03, 0x86, 0x55, 0xA4, 0x8B, 0x2A, 0x2B, 0xD3, 0xA4, 0x4A, 0xA7, 0xF2, 0xEC, 0x94, 0x87, 0x85, 0x94, 0x5E, 0x1E, 0x58, 0x6D, 0x72, 0x03, 0x2E, 0x56, 0xA8, 0x95, 0xB8, 0x2C, 0x7A, 0xBC, 0x5F, 0xE6, 0x32, 0x40, 0xF9, 0xAF, 0x1C, 0x23, 0x18, 0x52, 0x27, 0x47, 0xF1, 0x1D, 0x2D, 0x4E, 0xF9, 0x5F, 0xCE, 0xF7, 0xEB, 0x98, 0x9E, 0xB2, 0x6C, 0xE6, 0xC4, 0x57, 0xD1, 0x17, 0x76, 0x2B, 0xDB, 0x0E, 0xEF, 0x76, 0xDB, 0x67, 0xA0, 0x76, 0x73, 0x7A, 0xB0, 0x00, 0x68, 0xAC, 0xB6, 0x87, 0x4A, 0xFC, 0x04, 0x1E, 0x62, 0x43, 0x8D, 0xD5, 0x2C, 0xB1, 0x15, 0x17, 0x4B, 0x45, 0x66, 0xC0, 0x1E, 0x87, 0x25, 0xE6, 0x9D, 0xF0, 0xD7, 0x97, 0x4A, 0xDD, 0xDF, 0x69, 0x57, 0xE2, 0x6F, 0xF1, 0xFB, 0xD1, 0x6D, 0xC8, 0x9F, 0x1B, 0x44, 0xC6, 0xB5, 0xF4, 0xD1, 0x06, 0x06, 0x3A, 0x80, 0x3A, 0xC0, 0x5A, 0xA9, 0xC4, 0xC8, 0x47, 0x60, 0x3F, 0x8C, 0xF8, 0xAA, 0x71, 0x5C, 0x6A, 0x4C, 0x2B, 0xA3, 0xA1, 0xEC, 0x07, 0x6C, 0x56, 0x89, 0x55, 0x58, 0x79, 0xCC, 0x1E, 0xF1, 0x7F, 0x39, 0xF6, 0x32, 0xBD, 0xCB, 0xC8, 0xA3, 0x75, 0x53, 0xDC, 0xDB, 0x22, 0x2F, 0x5A, 0xD5, 0xD3, 0x6F, 0x4A, 0xC1, 0x02, 0x59, 0xD6, 0xC9, 0xF0, 0xB5, 0xD0, 0x03, 0x81, 0x79, 0xA5, 0xFB, 0x8C, 0x65, 0x15, 0x07, 0x3F, 0xF8, 0xFF, 0x12, 0x96, 0x53, 0xD7, 0xE9, 0xAE, 0xE4, 0xF1, 0x72, 0x0D, 0x5E, 0xF3, 0x12, 0x58, 0xBF, 0x81, 0x35, 0x58, 0xA6, 0x96, 0x1C, 0x01, 0x2B, 0x83, 0xC8, 0xC8, 0xC2, 0x31, 0x41, 0x3A, 0xEC, 0x88, 0x3F, 0x03, 0x2B, 0x5F, 0x70, 0xBF, 0xD0, 0xDA, 0xF3, 0x54, 0x95, 0xD8, 0x97, 0x81, 0xDF, 0xFA, 0xC1, 0x97, 0x5D, 0x4D, 0x55, 0x0B, 0xA5, 0x6B, 0x5D, 0xAD, 0x88, 0x2A, 0x75, 0x1C, 0xE7, 0xA4, 0xE8, 0x15, 0x99, 0x3F, 0x21, 0xCD, 0x15, 0xC4, 0x36, 0x58, 0xE2, 0x60, 0x9F, 0xDD, 0x3F, 0x9E, 0x85, 0xAC, 0x5A, 0x2C, 0xBC, 0x87, 0x6D, 0x38, 0x43, 0x96, 0x75, 0x90, 0x85, 0x47, 0xD2, 0x50, 0x7B, 0x50, 0xFB, 0x42, 0x06, 0x9B, 0x4A, 0xA3, 0x67, 0x8C, 0x85, 0x13, 0xD4, 0x7B, 0x94, 0xAF, 0x86, 0x73, 0xF6, 0x24, 0xAC, 0x7F, 0x3C, 0x36, 0x5F, 0xAA, 0x78, 0x70, 0xBA, 0x44, 0x7B, 0x6A, 0x98, 0xAA, 0xA0, 0xA2, 0xD8, 0x1D, 0x0A, 0x61, 0x38, 0xD3, 0xF9, 0x33, 0x5C, 0x6C, 0x8E, 0xA7, 0xFD, 0x7E, 0x32, 0x20, 0x86, 0xB3, 0x9E, 0xC8, 0x13, 0xAD, 0x85, 0xFF, 0x0B, 0x2C, 0xB6, 0x1C, 0xD2, 0xAF, 0xBC, 0x6E, 0x07, 0x6D, 0x64, 0x98, 0x96, 0x62, 0x03, 0xBA, 0xD6, 0xC4, 0x24, 0x48, 0x1B, 0xCE, 0xB2, 0x20, 0xB8, 0x27, 0x5E, 0x6A, 0x11, 0xCF, 0xF4, 0xE8, 0xBC, 0x74, 0x6B, 0x77, 0xA0, 0xED, 0x40, 0x52, 0x57, 0xC2, 0x53, 0xB3, 0x2E, 0x05, 0xFA, 0x24, 0x7B, 0xC6, 0x53, 0xB1, 0x9A, 0x1A, 0xB9, 0xDF, 0x0C, 0x56, 0x82, 0xFC, 0xCF, 0x11, 0xD1, 0x2B, 0x7A, 0xFF, 0x99, 0xC5, 0xD5, 0x41, 0xFB, 0xE9, 0xC9, 0xBD, 0x28, 0x6A, 0x6C, 0x3F, 0x78, 0xAE, 0xF7, 0xEB, 0xC7, 0x61, 0x31, 0x9A, 0x65, 0x19, 0x35, 0x3B, 0x59, 0xA0, 0xE5, 0x89, 0x52, 0x2B, 0x4B, 0x95, 0x1D, 0xBA, 0x6E, 0x6C, 0x5B, 0x45, 0x1B, 0xFB, 0xBA, 0x6B, 0x56, 0xCE, 0x8D, 0xBF, 0x0F, 0x2C, 0x46, 0xFD, 0xF9, 0x54, 0xB8, 0xDD, 0x41, 0x7F, 0x13, 0x18, 0x6A, 0x12, 0xA0, 0x8B, 0x58, 0xF4, 0x69, 0xC5, 0x13, 0xA5, 0xAE, 0x65, 0x6B, 0x2A, 0x08, 0x8D, 0x7B, 0x2B, 0xB4, 0x9E, 0xDC, 0xF5, 0xB3, 0x4D, 0xF6, 0x3F, 0x07, 0x8B, 0xC5, 0xBB, 0x49, 0x1F, 0x38, 0xDE, 0xFE, 0x3C, 0x32, 0x09, 0xED, 0xD8, 0x16, 0xB0, 0x65, 0x0D, 0x6C, 0x59, 0x97, 0xDF, 0xBC, 0xBF, 0xA2, 0xF7, 0xA7, 0x49, 0x88, 0x79, 0x3D, 0x58, 0x2C, 0x9C, 0x0E, 0xB4, 0x85, 0x6A, 0x15, 0xDB, 0xAB, 0x16, 0xA4, 0xA7, 0xB1, 0x12, 0xA2, 0xBE, 0x25, 0x48, 0xBA, 0x39, 0xA6, 0x3D, 0x16, 0xA0, 0x27, 0x7E, 0x74, 0xFC, 0xC2, 0xFA, 0xFC, 0x43, 0xB0, 0xA2, 0x95, 0x31, 0xE6, 0x21, 0x81, 0xD2, 0x54, 0x39, 0x6E, 0xD9, 0x81, 0x63, 0xCE, 0x93, 0x45, 0xD2, 0xB0, 0x31, 0xED, 0x73, 0xAA, 0x58, 0xB9, 0xDB, 0xF4, 0x2B, 0x9F, 0xFA, 0x47, 0x60, 0xD1, 0x52, 0xA4, 0x34, 0xAC, 0x4F, 0x4A, 0x0B, 0xEA, 0xA6, 0x65, 0x07, 0xCE, 0xDD, 0x44, 0x6C, 0x4E, 0xBA, 0x3C, 0x6E, 0x14, 0xC4, 0x0D, 0x79, 0x5B, 0xC4, 0xDD, 0xAD, 0xAF, 0x42, 0xFA, 0xB5, 0xCF, 0xFD, 0x13, 0xB0, 0xE2, 0x99, 0xD9, 0xFF, 0xE6, 0xD7, 0xB4, 0x40, 0x5E, 0xF7, 0xDC, 0xB2, 0x5F, 0xA9, 0xD7, 0x50, 0x39, 0x65, 0xD1, 0xD6, 0xD5, 0x63, 0x52, 0xCF, 0x4F, 0xBF, 0x9C, 0x05, 0xFF, 0x00, 0xAC, 0x52, 0x7D, 0xB6, 0xAD, 0x52, 0xA8, 0x9E, 0x1B, 0xBB, 0xA4, 0xD5, 0xB6, 0xC8, 0xC6, 0x6A, 0x28, 0x59, 0x78, 0x98, 0x8F, 0x49, 0x69, 0xC6, 0xE3, 0xF9, 0xE6, 0x7C, 0xA3, 0xDF, 0xF9, 0xE4, 0xFF, 0x3F, 0xAC, 0xC8, 0x6D, 0xF1, 0x43, 0xA8, 0xCF, 0x60, 0xFC, 0x48, 0xC4, 0xE4, 0x35, 0x36, 0x2E, 0x66, 0x51, 0x1C, 0x46, 0xB7, 0x98, 0x66, 0xDF, 0xFE, 0xE8, 0xFF, 0x3B, 0xAC, 0xA8, 0x31, 0x06, 0x22, 0x6A, 0x85, 0x73, 0x6B, 0x5A, 0xD3, 0xB4, 0x57, 0xB8, 0xC1, 0xFF, 0xF2, 0xD9, 0xFF, 0x6F, 0x58, 0xD9, 0xB4, 0x2D, 0xBA, 0xC6, 0xDA, 0xE7, 0xC5, 0x5C, 0x35, 0xD5, 0xE6, 0xE2, 0x96, 0x7D, 0x20, 0xAC, 0xB5, 0x92, 0xF7, 0xF7, 0x34, 0x2D, 0x80, 0x14, 0xE7, 0x18, 0x03, 0xA7, 0xA5, 0xAF, 0x99, 0x86, 0x88, 0x6B, 0x96, 0x7C, 0x1C, 0x2C, 0xDF, 0x50, 0xA9, 0x32, 0x44, 0x5C, 0xB2, 0x69, 0x97, 0x0D, 0xF4, 0xAA, 0xA9, 0xE3, 0xBB, 0x06, 0x5A, 0xCF, 0x26, 0x7A, 0x2F, 0x0F, 0x2B, 0xEF, 0x9F, 0x52, 0xB4, 0xA6, 0xD1, 0x61, 0xBD, 0x52, 0xCF, 0x4F, 0x75, 0x13, 0x68, 0x8A, 0x2A, 0xDD, 0xB0, 0x08, 0x3E, 0xB4, 0xBF, 0x9F, 0x3F, 0x0B, 0x16, 0xF2, 0x40, 0x79, 0x2E, 0x9B, 0xAF, 0xE5, 0x2C, 0x3D, 0xF4, 0x71, 0x16, 0x28, 0x45, 0xEE, 0x13, 0xB6, 0xAC, 0x52, 0xC3, 0x62, 0xCB, 0x3E, 0xD1, 0xF7, 0xAB, 0xEE, 0xD8, 0x07, 0xC1, 0x82, 0x3A, 0x67, 0x1E, 0x20, 0xCA, 0x4A, 0xB9, 0xB2, 0x67, 0x4B, 0x56, 0xEB, 0x6F, 0xAA, 0xB6, 0x59, 0xA6, 0x83, 0xBE, 0xA3, 0xFB, 0xBA, 0xF2, 0x56, 0x13, 0x9F, 0x01, 0x4B, 0xD9, 0xF1, 0x37, 0xCD, 0xEC, 0x8F, 0x05, 0x50, 0xCA, 0x83, 0x76, 0x55, 0x8B, 0xEE, 0xF1, 0x44, 0xF1, 0x74, 0xE2, 0xD1, 0x69, 0xFA, 0x31, 0xB0, 0x56, 0xF8, 0xBA, 0xF1, 0x85, 0xE1, 0x2A, 0x61, 0x1D, 0x99, 0xB2, 0x01, 0xDE, 0xCD, 0x05, 0xA2, 0x90, 0xAD, 0xDE, 0x09, 0x49, 0xA6, 0xC9, 0x87, 0xC0, 0x4A, 0x31, 0x2B, 0x45, 0x8C, 0x62, 0x23, 0x34, 0xA7, 0xEA, 0x8B, 0xDE, 0xA1, 0x0E, 0x40, 0xC4, 0xE2, 0x64, 0x88, 0x2B, 0x86, 0xC9, 0x67, 0xC0, 0x6A, 0xD9, 0x45, 0x18, 0xC0, 0x3D, 0xF7, 0xB2, 0x14, 0x71, 0x86, 0xAF, 0x72, 0xB0, 0x40, 0x18, 0x8D, 0xF4, 0x7A, 0xCD, 0x24, 0xFB, 0x08, 0x58, 0xEB, 0xE6, 0x7D, 0x71, 0xA0, 0xD6, 0x4C, 0x40, 0x93, 0xD3, 0x15, 0xF5, 0x17, 0x29, 0x79, 0x4D, 0xB1, 0x6D, 0x06, 0xDB, 0xD6, 0x94, 0x7E, 0x02, 0x2C, 0x74, 0x8E, 0xBF, 0xA1, 0x92, 0x88, 0xF6, 0xEB, 0x78, 0x99, 0x9C, 0xBC, 0x04, 0xDD, 0x49, 0x02, 0x4F, 0xDE, 0x8B, 0x6E, 0x5B, 0xBB, 0x0F, 0x80, 0x05, 0xFB, 0xF5, 0x8C, 0x57, 0x14, 0x3B, 0xF0, 0x09, 0xD5, 0x84, 0xA3, 0x43, 0x68, 0x8F, 0xFA, 0x06, 0xEB, 0x60, 0xA8, 0xD9, 0x56, 0xF2, 0xFE, 0xB0, 0x64, 0x73, 0x9A, 0xE5, 0xD4, 0x14, 0xB1, 0x69, 0xA2, 0x47, 0xB4, 0xEE, 0x35, 0x1C, 0xDB, 0xEB, 0x06, 0x99, 0x8C, 0x51, 0x8C, 0xD6, 0xFF, 0xC2, 0x89, 0x2C, 0xAF, 0x07, 0x0B, 0xF9, 0xF7, 0xBE, 0xE9, 0xDB, 0x3F, 0xC2, 0x67, 0xEC, 0xCD, 0x31, 0x85, 0x21, 0x90, 0xCA, 0x56, 0x0D, 0x67, 0xF2, 0xBC, 0x26, 0x2C, 0x96, 0x44, 0x81, 0x7F, 0x3A, 0x9D, 0xFD, 0x30, 0x32, 0x0B, 0xB7, 0x17, 0x38, 0xC9, 0x9C, 0xD4, 0xA2, 0x75, 0xE9, 0x11, 0x15, 0xDE, 0x4D, 0x67, 0xAA, 0xB7, 0xD3, 0x2D, 0x8E, 0xE5, 0x5F, 0xDB, 0xB2, 0x18, 0xF5, 0x07, 0x7F, 0x1C, 0x29, 0x21, 0x8C, 0xD7, 0x81, 0x5E, 0x64, 0xDE, 0xC2, 0x6B, 0x36, 0xB6, 0xDB, 0x65, 0x03, 0x60, 0x43, 0x75, 0x37, 0x79, 0xE2, 0xD8, 0xCE, 0xDB, 0x91, 0x63, 0xD7, 0x66, 0x7D, 0xAF, 0x02, 0x8B, 0x85, 0x4B, 0xAF, 0xAF, 0x57, 0x06, 0x96, 0xBE, 0xE2, 0x5E, 0x4E, 0xF0, 0x7A, 0x8C, 0x8D, 0x9C, 0x60, 0xA7, 0x17, 0x21, 0x23, 0xAA, 0x65, 0x94, 0xC2, 0xD7, 0x79, 0xC6, 0xC0, 0xA0, 0xDC, 0x41, 0x5B, 0xAC, 0x86, 0x1B, 0xFE, 0xA2, 0xB0, 0xE8, 0x6D, 0x3B, 0x70, 0xC0, 0x59, 0xA0, 0xF0, 0xBC, 0x2A, 0x6F, 0x8F, 0xBE, 0x62, 0x74, 0x76, 0xAA, 0xB9, 0x91, 0x13, 0x76, 0x91, 0x4A, 0x2A, 0x4B, 0x58, 0x69, 0x75, 0x2C, 0x66, 0xB3, 0xAD, 0xEB, 0x5E, 0x13, 0xF6, 0x92, 0xB0, 0x58, 0x7A, 0x1A, 0x9B, 0xD4, 0xBB, 0x9A, 0x98, 0x03, 0xCE, 0xCD, 0x01, 0xB5, 0x78, 0xD3, 0x29, 0x14, 0x95, 0xF1, 0xC9, 0x18, 0x9E, 0x1A, 0xFD, 0xBE, 0xCD, 0x21, 0x55, 0xBB, 0xB3, 0xD1, 0xF9, 0x74, 0xAF, 0x03, 0x8B, 0xDD, 0x76, 0x43, 0xCB, 0xF9, 0x96, 0x40, 0x35, 0xB9, 0xA1, 0x74, 0xC6, 0x72, 0x42, 0x3D, 0x48, 0x6D, 0x7A, 0xDA, 0x34, 0xC4, 0x27, 0xD4, 0xDA, 0x3B, 0x52, 0xAF, 0xF9, 0x9E, 0x89, 0xCB, 0x3F, 0xD4, 0xB4, 0xBE, 0x01, 0x6B, 0xA3, 0x9D, 0x2F, 0x6B, 0xEC, 0x2B, 0xA8, 0xA3, 0x4F, 0x79, 0x7C, 0x15, 0xE9, 0x59, 0x36, 0xEF, 0x9C, 0xB4, 0x93, 0x06, 0xEA, 0x68, 0x96, 0x3C, 0x90, 0xCD, 0xA4, 0xF1, 0xBF, 0x15, 0xE2, 0x7B, 0xDF, 0x63, 0xD5, 0x6B, 0xA9, 0xD4, 0xE4, 0x31, 0x40, 0x79, 0x75, 0x0C, 0x75, 0x79, 0x6C, 0x2C, 0xEF, 0x69, 0x3A, 0x1B, 0x73, 0x02, 0x83, 0x0E, 0x2F, 0xE3, 0x3F, 0x35, 0xBE, 0x0C, 0x2B, 0x73, 0xDA, 0x59, 0x95, 0x33, 0x71, 0x51, 0x6B, 0x30, 0xD0, 0xF7, 0xB0, 0xA6, 0xD5, 0x10, 0xAB, 0x12, 0x70, 0x8F, 0x69, 0xE3, 0x11, 0x43, 0xAF, 0x0A, 0xEB, 0xDA, 0xDE, 0x5D, 0x27, 0xB3, 0x5F, 0x66, 0xD0, 0xFE, 0x22, 0xA3, 0xE0, 0x45, 0x4C, 0x3B, 0x0C, 0xD1, 0xC6, 0xF8, 0x29, 0x7B, 0x3F, 0x58, 0x7B, 0x6D, 0xFD, 0x6B, 0xE8, 0xDD, 0xBC, 0x54, 0x21, 0x3C, 0xB1, 0xDE, 0x57, 0xA3, 0xF2, 0xEF, 0xC4, 0xB0, 0xEA, 0xB1, 0x72, 0x1B, 0x18, 0x79, 0xBA, 0x65, 0xF6, 0x45, 0x60, 0x6D, 0x8D, 0x3D, 0xC1, 0xC6, 0xD5, 0x11, 0xEC, 0x4F, 0x87, 0x31, 0xBC, 0xE6, 0x8C, 0xB3, 0x91, 0xED, 0xF4, 0xEC, 0xA8, 0xDE, 0xEF, 0x46, 0x06, 0xD9, 0x1B, 0xC2, 0x5A, 0xAB, 0xEA, 0xB7, 0xBD, 0xDF, 0xBC, 0xDA, 0xE4, 0x59, 0x6C, 0x42, 0x36, 0xEC, 0xF3, 0x32, 0xE5, 0x2C, 0x58, 0xEF, 0x3A, 0xD4, 0x89, 0x54, 0xCA, 0xDF, 0x10, 0xD6, 0x81, 0x68, 0xFD, 0x9E, 0xFB, 0xE0, 0x1A, 0xC5, 0x51, 0x78, 0x5E, 0x0D, 0xF5, 0xBA, 0x4B, 0xAC, 0x28, 0xC4, 0x86, 0x9C, 0xF8, 0xD2, 0xA0, 0xF2, 0x15, 0x1A, 0x1F, 0x71, 0xF7, 0x3F, 0x68, 0x57, 0xDF, 0x80, 0x75, 0x44, 0xB6, 0x33, 0xDC, 0xF8, 0x19, 0xCC, 0x81, 0x76, 0x7D, 0xA5, 0xC6, 0x9C, 0x5F, 0x7B, 0x82, 0x2B, 0x35, 0x38, 0x18, 0x2F, 0x6E, 0xE0, 0x5C, 0x3F, 0x16, 0x69, 0x79, 0x55, 0x10, 0x24, 0x94, 0xF3, 0xB7, 0x84, 0x85, 0xCF, 0x50, 0xD7, 0x56, 0xA8, 0x6C, 0xDF, 0xC7, 0x34, 0x69, 0xB5, 0x2A, 0xA0, 0xB3, 0x16, 0x6A, 0xC2, 0xC9, 0x1A, 0x5B, 0x9D, 0xCB, 0xF8, 0xEB, 0x8D, 0xAF, 0xC7, 0x59, 0xD0, 0x46, 0x3C, 0x8B, 0x38, 0x05, 0xF4, 0xCB, 0xE2, 0xBC, 0x96, 0xBE, 0x5A, 0x43, 0x3E, 0xA4, 0x94, 0x53, 0x16, 0xAD, 0xF4, 0xBB, 0xC5, 0x7E, 0x12, 0x2C, 0x8A, 0xCE, 0xDE, 0x35, 0xB9, 0x92, 0xC8, 0xD1, 0x23, 0x85, 0x9D, 0x56, 0x15, 0x25, 0x03, 0xCF, 0x73, 0xB4, 0x1D, 0x48, 0x1E, 0xFB, 0x28, 0x58, 0xB8, 0x56, 0xE3, 0xF3, 0x26, 0x95, 0x58, 0x50, 0x29, 0x8E, 0xB3, 0x2C, 0xCE, 0xB6, 0x35, 0xEE, 0xD9, 0x42, 0xF3, 0xF3, 0x25, 0x0D, 0xEB, 0x1B, 0xB0, 0xCE, 0x30, 0x61, 0x33, 0x4A, 0x01, 0xF7, 0xB8, 0x49, 0x2B, 0xCB, 0x04, 0xBA, 0x96, 0xD3, 0xD3, 0xD5, 0x9D, 0x25, 0xFB, 0x30, 0x58, 0xE8, 0x24, 0x01, 0xB3, 0xD8, 0xBB, 0x82, 0x6A, 0x5F, 0x52, 0xFF, 0xAD, 0xBD, 0xFF, 0x38, 0xE6, 0x1F, 0x06, 0x8B, 0x7A, 0x70, 0xE6, 0x30, 0x8B, 0xE2, 0xA2, 0xDD, 0x83, 0x2B, 0x9B, 0xB7, 0xF7, 0x94, 0x5E, 0xF9, 0xA7, 0xC1, 0x62, 0xD3, 0x56, 0xFD, 0xD2, 0x87, 0xB9, 0x5E, 0xA5, 0x02, 0xA6, 0x6E, 0x9B, 0x5E, 0xB8, 0xE7, 0x1F, 0x07, 0x0B, 0x57, 0xDB, 0x57, 0x36, 0x58, 0xFA, 0xF9, 0xFD, 0x89, 0x67, 0x9D, 0x89, 0xF9, 0x8E, 0x89, 0x0B, 0xFF, 0x40, 0x58, 0x21, 0xB4, 0x9B, 0x59, 0x33, 0x2C, 0xA4, 0x2F, 0xD3, 0xA5, 0xE5, 0x5E, 0x4B, 0xA6, 0xBD, 0x4E, 0x1F, 0x02, 0x2B, 0x86, 0x77, 0xC9, 0x30, 0x1E, 0xE8, 0x02, 0x02, 0x76, 0x24, 0xBA, 0xB3, 0x93, 0x59, 0x9B, 0x10, 0x19, 0x77, 0xC2, 0xF9, 0x27, 0xC2, 0xA2, 0x53, 0xA0, 0x6B, 0x9A, 0x0A, 0x10, 0x6C, 0x61, 0xAD, 0xD7, 0xA7, 0x73, 0x74, 0x2F, 0xBD, 0x6A, 0x0C, 0x03, 0xCE, 0x3F, 0x13, 0x16, 0x8A, 0x0C, 0x4C, 0x61, 0x24, 0xD2, 0xAF, 0x14, 0xD3, 0x63, 0xF1, 0x5C, 0x13, 0x75, 0xE6, 0x21, 0xE3, 0x1F, 0x0B, 0xEB, 0x6C, 0x51, 0x81, 0x0D, 0xFA, 0xA0, 0xE9, 0x44, 0xC4, 0xF8, 0x38, 0x83, 0xA8, 0x8E, 0x31, 0xE5, 0xFC, 0x73, 0x61, 0xA1, 0xB3, 0x62, 0xF4, 0x53, 0x4A, 0x12, 0xB7, 0xA5, 0x1F, 0x8B, 0xB3, 0xE4, 0x76, 0xDE, 0x6F, 0x37, 0xDB, 0xA3, 0x7F, 0x4D, 0xF9, 0x1B, 0x8C, 0xEF, 0xC0, 0x4A, 0xD1, 0x39, 0x56, 0x6A, 0x2E, 0x9D, 0x1F, 0x62, 0x28, 0xEB, 0xCB, 0x57, 0xFE, 0xFE, 0xE3, 0x5B, 0xE5, 0x7B, 0x94, 0xFD, 0x2A, 0xCB, 0x18, 0xDB, 0xA3, 0x8C, 0x79, 0x44, 0x7F, 0x3B, 0xAC, 0x4D, 0xC3, 0xA9, 0xE0, 0x67, 0xD2, 0xD8, 0x0B, 0xFA, 0xFB, 0x60, 0xF9, 0x56, 0x0F, 0xCF, 0xB6, 0xF8, 0xAE, 0x79, 0x24, 0xF9, 0xF5, 0xB0, 0x22, 0xE8, 0x95, 0xE0, 0x01, 0x67, 0xD9, 0x5C, 0x39, 0x87, 0x7D, 0xC7, 0x7F, 0x3D, 0x2C, 0x74, 0x1A, 0x98, 0xBC, 0x23, 0x10, 0xBF, 0x68, 0xE7, 0xFB, 0xA7, 0x1D, 0x2C, 0x36, 0x81, 0xEB, 0x5D, 0x39, 0xD3, 0x32, 0x7F, 0xA0, 0x29, 0x9F, 0x17, 0xDE, 0xC1, 0xC2, 0x77, 0x31, 0x13, 0x1E, 0x9E, 0xC6, 0x87, 0xBE, 0x7E, 0x12, 0xC8, 0x82, 0x77, 0xB0, 0x94, 0xFB, 0x3E, 0xAC, 0xFD, 0x3D, 0x21, 0xA8, 0x63, 0xB2, 0x64, 0x35, 0x48, 0x3B, 0x58, 0x1C, 0xDD, 0x5E, 0xD1, 0xD2, 0xE9, 0xA0, 0xDD, 0x3B, 0xFD, 0xF7, 0xC2, 0x62, 0x7F, 0xB4, 0x53, 0x88, 0xF4, 0x1E, 0x9A, 0x90, 0x77, 0xB0, 0x72, 0x58, 0x6E, 0xAB, 0x9E, 0xEE, 0x7E, 0x0E, 0xAB, 0xEF, 0xB6, 0x76, 0x8F, 0x48, 0xCB, 0xF9, 0x67, 0xFD, 0x0F, 0x62, 0xF5, 0x5D, 0x58, 0x27, 0x7B, 0x5D, 0xAB, 0xE8, 0x49, 0x4F, 0x78, 0x07, 0xAB, 0xF6, 0xF0, 0x0D, 0x95, 0x07, 0x11, 0x33, 0xA4, 0xBC, 0x83, 0x55, 0x8F, 0x64, 0x40, 0x1A, 0x6A, 0x5A, 0x3E, 0xE3, 0x1D, 0x2C, 0x39, 0xE8, 0x48, 0xBB, 0x0F, 0x42, 0xAD, 0xA9, 0x6F, 0x33, 0xCE, 0x3B, 0x58, 0x70, 0xAC, 0x89, 0xF9, 0x54, 0x3D, 0xB2, 0x89, 0x39, 0xEF, 0x60, 0xE1, 0x61, 0xE8, 0x96, 0x2C, 0xEE, 0xBA, 0xC6, 0x79, 0x07, 0x4B, 0x1D, 0xBE, 0xA1, 0x0F, 0x77, 0x1E, 0x7E, 0x24, 0xAA, 0xEF, 0xC3, 0x4A, 0x90, 0x1E, 0x3A, 0x9C, 0xAE, 0x8E, 0xD7, 0x0F, 0x25, 0xF5, 0x17, 0x60, 0x21, 0x1D, 0xDE, 0x49, 0x18, 0xFF, 0xE4, 0xF1, 0x6D, 0x58, 0xEB, 0x86, 0x3B, 0x7A, 0x75, 0xB0, 0x9A, 0x54, 0x9A, 0x73, 0x07, 0xAB, 0x71, 0x5C, 0xA1, 0x0E, 0xBF, 0xEA, 0x60, 0x35, 0x0E, 0xB4, 0x93, 0x6B, 0x4A, 0x3B, 0x58, 0x8D, 0x31, 0xFC, 0xCC, 0xA0, 0xC3, 0x77, 0xB0, 0x2C, 0x63, 0xF7, 0xC0, 0x6E, 0xEF, 0x0E, 0x96, 0x0C, 0x4B, 0x49, 0x63, 0xFB, 0x47, 0x07, 0x4B, 0x0E, 0xD4, 0xE2, 0xBD, 0xA0, 0x1D, 0xAC, 0x46, 0xA7, 0x35, 0x34, 0xDD, 0xD1, 0xAB, 0x83, 0x65, 0x1E, 0x2B, 0x68, 0x5A, 0x61, 0x07, 0xAB, 0x71, 0xA0, 0xBD, 0xF1, 0xFB, 0x0E, 0x56, 0xE3, 0x40, 0xBB, 0xBF, 0xE6, 0xAC, 0x83, 0xD5, 0x34, 0x98, 0x07, 0x4C, 0x6B, 0x90, 0x74, 0xB0, 0x1E, 0xCF, 0xA5, 0xAF, 0x1D, 0xAC, 0xC7, 0x9C, 0x16, 0x21, 0xF0, 0x74, 0xF2, 0x0E, 0x96, 0xD1, 0x69, 0xB9, 0xA4, 0xE5, 0x5E, 0x67, 0x1D, 0x2C, 0xE9, 0xB4, 0x60, 0xA4, 0xE5, 0x25, 0x1D, 0xAC, 0x36, 0xA7, 0x45, 0xF4, 0xDD, 0x5F, 0x1D, 0x2C, 0xE3, 0xB8, 0xC0, 0xFE, 0xD1, 0x43, 0x07, 0xAB, 0x39, 0x3D, 0x84, 0x91, 0x96, 0xC3, 0x3A, 0x58, 0x8D, 0x4E, 0x6B, 0xFC, 0x3B, 0x34, 0xAD, 0xBF, 0x73, 0x4E, 0xE9, 0xDA, 0xBC, 0x0B, 0xB3, 0x83, 0x65, 0x1A, 0x41, 0xEB, 0x19, 0x0F, 0x1D, 0x2C, 0xE9, 0xB4, 0x60, 0x2E, 0x7D, 0xE9, 0x60, 0x35, 0x0E, 0x5A, 0x9D, 0xB7, 0x6D, 0x3A, 0x9F, 0xA8, 0x83, 0xA5, 0x8C, 0xB3, 0x3C, 0x67, 0x6E, 0xD8, 0xAD, 0x86, 0x6D, 0xA6, 0x35, 0xAA, 0xEF, 0x43, 0xDB, 0x05, 0xA5, 0xAD, 0x23, 0xAB, 0x6E, 0x47, 0xFB, 0xC9, 0x45, 0xE9, 0xBF, 0x76, 0x1E, 0x3C, 0x3D, 0x8D, 0x88, 0xAB, 0xDF, 0xAF, 0xB7, 0x83, 0x65, 0x09, 0x4D, 0xB3, 0xEC, 0xB3, 0x9B, 0x68, 0xF8, 0x7F, 0x9A, 0x76, 0x6A, 0x8E, 0x16, 0x11, 0x12, 0xE9, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82 };

const PROGMEM unsigned int notreallypoker_Card_BinarySize = 934;
const PROGMEM char notreallypoker_Card_BinaryImage[] = { 0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x46, 0x00, 0x74, 0x00, 0xC2, 0x05, 0x00, 0xE2, 0xE2, 0xE2, 0xEB, 0xEB, 0xEB, 0xFD, 0xFD, 0xFD, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xF9, 0x04, 0x01, 0x0A, 0x00, 0x07, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x74, 0x00, 0x00, 0x03, 0xFE, 0x78, 0xBA, 0xDC, 0xFE, 0x30, 0xCA, 0x49, 0xAB, 0xBD, 0x38, 0xEB, 0xCD, 0x2F, 0xF9, 0x60, 0x28, 0x8E, 0x64, 0x19, 0x76, 0x8F, 0xA9, 0xAE, 0x2C, 0x88, 0x1E, 0x6D, 0x2C, 0x93, 0x9C, 0xF8, 0x6A, 0x36, 0x96, 0xDF, 0xDB, 0x3E, 0x9D, 0x8A, 0x00, 0xA1, 0x42, 0x08, 0x18, 0x8F, 0x48, 0x23, 0x71, 0x08, 0x1B, 0xB8, 0x28, 0x4F, 0x05, 0x28, 0xF0, 0x38, 0xCA, 0x8E, 0xD5, 0xE9, 0x22, 0x1A, 0xE1, 0xC2, 0x80, 0x07, 0x23, 0x29, 0x89, 0x1C, 0x53, 0xA5, 0x60, 0x34, 0x13, 0xE2, 0x0D, 0xAE, 0xB0, 0x12, 0xAB, 0xEA, 0xDC, 0x68, 0x6F, 0x3F, 0xDD, 0x91, 0x52, 0x23, 0x1E, 0xE5, 0xD7, 0x75, 0x78, 0x7F, 0x21, 0x7B, 0x19, 0x7D, 0x3E, 0x0E, 0x76, 0x76, 0x61, 0x6F, 0x85, 0x10, 0x72, 0x26, 0x74, 0x81, 0x80, 0x77, 0x6C, 0x60, 0x87, 0x84, 0x64, 0x98, 0x53, 0x74, 0x88, 0x95, 0x93, 0x29, 0x5A, 0x0E, 0x90, 0x2C, 0x70, 0x0D, 0x42, 0x8A, 0x82, 0x77, 0x43, 0x82, 0xA8, 0xAA, 0x71, 0x9A, 0x65, 0x4B, 0x1F, 0x67, 0x78, 0x5E, 0x2E, 0x25, 0x3C, 0x3A, 0x34, 0xB7, 0xB6, 0x22, 0x92, 0xBA, 0x15, 0xAE, 0xB8, 0xAF, 0x5F, 0x4C, 0x69, 0xC1, 0xBB, 0x82, 0xBD, 0xC7, 0x8B, 0xC9, 0x3F, 0x4F, 0xCC, 0xC6, 0xA2, 0xCF, 0x14, 0xC3, 0xBE, 0x94, 0xC4, 0x7E, 0xD5, 0x12, 0xB9, 0xD2, 0xAD, 0xC8, 0x6C, 0xB1, 0x48, 0xB3, 0x45, 0x68, 0xC6, 0xA0, 0xD9, 0xD4, 0x0C, 0xA4, 0x8D, 0xC0, 0x6E, 0xB7, 0xE8, 0x0C, 0x2E, 0xEF, 0x3B, 0x9B, 0xB4, 0xB1, 0x66, 0xAB, 0xC5, 0x61, 0xF2, 0xAB, 0x11, 0xD7, 0xF4, 0x38, 0xAA, 0x72, 0xEF, 0xD7, 0x1F, 0x50, 0xDD, 0x04, 0x6E, 0x28, 0x08, 0x4D, 0x1D, 0xA5, 0x44, 0x0A, 0xF9, 0x04, 0x7C, 0x88, 0xF0, 0xDF, 0x23, 0x77, 0x13, 0xDA, 0xE9, 0x39, 0x38, 0xFE, 0x0F, 0x4F, 0xBD, 0x4B, 0x13, 0xC7, 0xE9, 0x53, 0xC3, 0x8F, 0xCA, 0xB7, 0x49, 0xE6, 0x46, 0x15, 0x2C, 0x61, 0x8A, 0x1D, 0x32, 0x56, 0xC5, 0x88, 0xC1, 0xE3, 0x47, 0x70, 0x9C, 0x90, 0x72, 0xB5, 0x60, 0x3A, 0x9C, 0x16, 0x8E, 0x5B, 0x47, 0x3F, 0xDF, 0x0C, 0xFA, 0x8C, 0x03, 0x34, 0xE6, 0x32, 0x67, 0x43, 0x51, 0xAA, 0x41, 0xD8, 0x33, 0x29, 0xC4, 0xA3, 0x3B, 0x37, 0x3A, 0xCD, 0x62, 0x23, 0xE8, 0xB6, 0xA9, 0xFB, 0x4E, 0x04, 0x9D, 0x49, 0x31, 0x91, 0xCD, 0x81, 0x96, 0x68, 0x9D, 0x3B, 0xF9, 0x33, 0xE5, 0xA9, 0x95, 0x66, 0xDE, 0x31, 0x8A, 0x27, 0xED, 0x63, 0x94, 0x82, 0x22, 0x23, 0xF2, 0x1C, 0xE5, 0x6F, 0xE9, 0xC5, 0x39, 0x60, 0xCF, 0x4E, 0x24, 0xC4, 0xD1, 0xE2, 0x20, 0x4E, 0x0B, 0x27, 0x36, 0xAC, 0x18, 0x36, 0x53, 0x60, 0x1A, 0x09, 0x77, 0xDE, 0x8D, 0x94, 0x97, 0x1D, 0x5A, 0xB1, 0x61, 0x41, 0xB9, 0x55, 0x05, 0x37, 0x9F, 0x5C, 0x4F, 0x26, 0x8D, 0xB2, 0x42, 0xA9, 0x56, 0x23, 0xE3, 0xCE, 0x2F, 0xEB, 0xA2, 0x03, 0x87, 0x74, 0xC1, 0xD7, 0x9B, 0x50, 0x44, 0x61, 0x4B, 0x87, 0x18, 0x2B, 0x49, 0xAD, 0x9A, 0x79, 0x9A, 0x75, 0xCD, 0x75, 0xF5, 0x4F, 0x92, 0xB4, 0x0B, 0xDB, 0xB5, 0xD8, 0x94, 0x36, 0x10, 0xAB, 0xEB, 0x68, 0x07, 0x14, 0xAD, 0xCD, 0x93, 0x53, 0x6F, 0xB1, 0x49, 0xD3, 0xF4, 0xFA, 0x15, 0xE7, 0xD8, 0xE4, 0x9C, 0x6B, 0x5E, 0xC9, 0x3B, 0xAC, 0x0E, 0x71, 0x8F, 0x4F, 0x29, 0x87, 0xB4, 0xFC, 0xAB, 0x53, 0xB8, 0xCC, 0x8A, 0xA9, 0x7E, 0xCE, 0xF8, 0x78, 0x36, 0x61, 0xD1, 0xD9, 0x01, 0x4B, 0x44, 0xAC, 0xF6, 0x7A, 0xD7, 0xAC, 0xF8, 0x0E, 0x5F, 0x8D, 0x7C, 0x7B, 0x31, 0xCB, 0xC6, 0xA6, 0xCB, 0xB7, 0x77, 0xDF, 0x0F, 0xE5, 0xFE, 0x9A, 0xCA, 0x9A, 0x8C, 0x34, 0xD7, 0x29, 0xFC, 0x39, 0x64, 0x5E, 0x10, 0xE5, 0x65, 0x02, 0x1A, 0x5B, 0xC9, 0x31, 0x51, 0x9D, 0x35, 0x5F, 0xBD, 0x57, 0x56, 0x4E, 0x05, 0xB6, 0xE6, 0x1A, 0x72, 0x51, 0x09, 0x95, 0xDB, 0x5A, 0xB0, 0x29, 0xD6, 0xDB, 0x85, 0xD1, 0xC4, 0x36, 0xCD, 0x86, 0xD9, 0xED, 0xB6, 0x94, 0x54, 0x1B, 0x0E, 0x07, 0xDC, 0x87, 0xDC, 0x60, 0xC8, 0x1A, 0x57, 0x44, 0x9C, 0xE6, 0xDC, 0x17, 0x05, 0x46, 0xA7, 0xD2, 0x5E, 0x69, 0x89, 0x97, 0x0D, 0x7F, 0x93, 0xFD, 0xB7, 0x5D, 0x80, 0x97, 0x7D, 0xC7, 0x9F, 0x7D, 0x39, 0xC2, 0x82, 0x23, 0x64, 0xA1, 0x84, 0x57, 0x98, 0x7A, 0x86, 0x08, 0xD6, 0xDF, 0x53, 0xE7, 0xA5, 0x17, 0xDF, 0x7A, 0xF3, 0x25, 0x19, 0xA5, 0x69, 0x18, 0x19, 0xF9, 0x46, 0x5F, 0x4B, 0xF5, 0x98, 0x5F, 0x5A, 0x64, 0x08, 0x88, 0x59, 0x8D, 0x13, 0x4A, 0x17, 0x43, 0x4B, 0x58, 0x32, 0x98, 0x21, 0x8C, 0x10, 0xDA, 0x24, 0xE1, 0x3E, 0x14, 0xAE, 0x58, 0x5A, 0x35, 0x2E, 0xDE, 0x86, 0x62, 0x6E, 0x2A, 0x8A, 0xC8, 0xE2, 0x54, 0xBF, 0xE9, 0x39, 0xE7, 0x71, 0x21, 0x66, 0xC8, 0x17, 0x89, 0x79, 0x0A, 0x6A, 0x5C, 0x52, 0x75, 0xFE, 0xA3, 0xDC, 0x9B, 0x52, 0xC8, 0x98, 0x1A, 0x64, 0xB6, 0x29, 0x6A, 0xA3, 0x5E, 0xD3, 0x2D, 0x18, 0x13, 0x8F, 0xE9, 0x7D, 0x29, 0x10, 0x90, 0xDD, 0x65, 0x45, 0x97, 0x34, 0x44, 0x6E, 0x4A, 0xDE, 0x91, 0x07, 0xFA, 0x65, 0x62, 0x92, 0x86, 0x51, 0x99, 0x43, 0x7B, 0xA0, 0xFE, 0x35, 0x65, 0x93, 0x16, 0x5A, 0x59, 0x9F, 0x78, 0x59, 0xA1, 0x79, 0xE3, 0x0E, 0xC1, 0xCD, 0xDA, 0x65, 0x89, 0x52, 0xC6, 0xD5, 0x93, 0x90, 0x64, 0x99, 0xEA, 0x6A, 0x2E, 0x83, 0xCD, 0x53, 0xE1, 0x4C, 0x1B, 0xAA, 0x6E, 0xA6, 0x13, 0x6B, 0x87, 0x02, 0x5A, 0x55, 0x83, 0x7F, 0x22, 0xDA, 0x21, 0x53, 0xCB, 0x25, 0x0B, 0x15, 0x94, 0xD1, 0x3A, 0x8B, 0x9E, 0x3C, 0xD9, 0xFA, 0x14, 0xA8, 0xAC, 0x23, 0x92, 0x08, 0xC6, 0x22, 0x6F, 0x75, 0xCB, 0x03, 0x35, 0xCE, 0xA4, 0x31, 0x67, 0x0C, 0xB3, 0x94, 0x95, 0x98, 0x52, 0xBD, 0x72, 0x97, 0x8A, 0x88, 0xEF, 0xBA, 0xA4, 0x4A, 0x77, 0xFB, 0x21, 0x78, 0xCD, 0x2A, 0xC0, 0xFC, 0x89, 0x88, 0x80, 0x18, 0x30, 0x04, 0xEF, 0xA3, 0x04, 0x0C, 0xE0, 0xDF, 0xB9, 0x20, 0x00, 0x70, 0xB0, 0x32, 0xE6, 0xBE, 0xD0, 0x6C, 0x43, 0x1F, 0x08, 0x30, 0xC3, 0xC4, 0x2A, 0x38, 0x4C, 0xF1, 0xC5, 0xB1, 0x5A, 0x8C, 0xF1, 0xC4, 0x24, 0x76, 0xEC, 0xB1, 0x2E, 0x09, 0x00, 0x00, 0x3B };

const PROGMEM unsigned int notreallypoker_IconExit_BinarySize = 577;
const PROGMEM char notreallypoker_IconExit_BinaryImage[] = { 0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x80, 0x00, 0x80, 0x00, 0x80, 0x01, 0x00, 0x52, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x21, 0xF9, 0x04, 0x01, 0x0A, 0x00, 0x01, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x02, 0xFE, 0x8C, 0x8F, 0xA9, 0xCB, 0xED, 0x0F, 0xA3, 0x9C, 0xB4, 0xDA, 0x8B, 0xB3, 0xDE, 0xBC, 0xFB, 0x0F, 0x86, 0xE2, 0x48, 0x96, 0xE6, 0x89, 0xA6, 0xEA, 0xCA, 0xB6, 0xEE, 0x0B, 0xC7, 0xF2, 0x4C, 0xD7, 0xF6, 0x8D, 0xE7, 0xFA, 0xCE, 0xF7, 0x1C, 0x00, 0x0C, 0x0A, 0x87, 0xC4, 0xA2, 0xF1, 0x88, 0x44, 0xFA, 0x10, 0xC9, 0xA6, 0xF3, 0x09, 0x0D, 0x2E, 0x03, 0xD1, 0xAA, 0xF5, 0xEA, 0xBB, 0x6A, 0xB7, 0xC9, 0x1E, 0xF7, 0x0B, 0x06, 0x7A, 0xC3, 0x64, 0x2D, 0xAF, 0x8C, 0xB6, 0xEE, 0xCC, 0x30, 0xE3, 0x7A, 0xDB, 0x26, 0xBE, 0xB9, 0x2F, 0xB9, 0xAE, 0xCC, 0xB2, 0xE7, 0xD2, 0x2A, 0x3D, 0x2E, 0x2D, 0x76, 0xE2, 0x77, 0x03, 0x28, 0x54, 0x32, 0x68, 0x53, 0x38, 0x34, 0x82, 0x58, 0xA3, 0xD8, 0xA8, 0x01, 0x39, 0xF3, 0x58, 0xF4, 0x21, 0x29, 0x43, 0x79, 0xF4, 0xB3, 0x78, 0x97, 0xA9, 0x99, 0x71, 0x69, 0x10, 0xB8, 0xE2, 0xD9, 0x75, 0x11, 0x4A, 0x35, 0x9A, 0x52, 0xDA, 0x64, 0x81, 0x6A, 0xD8, 0xC7, 0x6A, 0x3A, 0xF1, 0x0A, 0x8B, 0x22, 0x3B, 0x2B, 0x51, 0x6B, 0x6B, 0x82, 0xAB, 0x44, 0xB1, 0xCB, 0x4B, 0xE2, 0xFB, 0x49, 0xCB, 0xE9, 0xE0, 0xD6, 0x4B, 0x5C, 0x09, 0x7C, 0xDC, 0x50, 0xCC, 0xB8, 0x8C, 0x9A, 0x10, 0x3C, 0x8D, 0x21, 0x6D, 0x7D, 0x50, 0x9D, 0x5D, 0x81, 0xED, 0x1C, 0xB1, 0xCD, 0x6D, 0xEC, 0xAD, 0x1A, 0x9D, 0xEB, 0x41, 0x2E, 0xA5, 0xDC, 0x0A, 0x92, 0x5E, 0x2E, 0x02, 0xD5, 0xEE, 0x4E, 0x8D, 0x6D, 0x39, 0xAF, 0x4D, 0x8E, 0x7E, 0x2F, 0x9A, 0xDE, 0xE1, 0x0E, 0xC0, 0x64, 0x1F, 0x28, 0x81, 0xFF, 0x00, 0x46, 0x22, 0x58, 0xF0, 0x60, 0x3F, 0x7C, 0x09, 0xAF, 0x21, 0x2C, 0x68, 0xD0, 0xD5, 0x43, 0x88, 0xA7, 0x26, 0x36, 0xEC, 0x66, 0x51, 0x60, 0xB3, 0xFE, 0x85, 0xFC, 0x2E, 0x4A, 0xE4, 0x98, 0xEA, 0x9F, 0xC2, 0x7C, 0x0C, 0x41, 0x56, 0x04, 0x29, 0x72, 0x43, 0xCA, 0x8E, 0xDE, 0xFC, 0x65, 0x24, 0xA6, 0xCF, 0x64, 0xCB, 0x98, 0x24, 0x0F, 0x3D, 0x91, 0x67, 0x12, 0x9E, 0x93, 0x10, 0x2B, 0x87, 0xB1, 0xC3, 0x59, 0x53, 0xD7, 0xB7, 0x05, 0x3F, 0x81, 0xCE, 0x1C, 0xA7, 0x0E, 0xD9, 0x2F, 0x9D, 0x39, 0x1F, 0x84, 0x4B, 0xCA, 0x34, 0x28, 0xB8, 0xA1, 0x0A, 0xA0, 0x45, 0x3D, 0x2A, 0x54, 0x18, 0x51, 0x66, 0x36, 0x9B, 0x2A, 0xD5, 0x5A, 0x55, 0xDC, 0x49, 0xA9, 0x10, 0xB6, 0xAD, 0xD2, 0x58, 0x96, 0x2A, 0x3D, 0xA8, 0xEB, 0xC8, 0x3A, 0x55, 0x1B, 0xF0, 0x5D, 0x57, 0xB7, 0x5F, 0xD9, 0x6E, 0x8D, 0x78, 0xD6, 0xEB, 0x33, 0xB8, 0xF8, 0x5A, 0xF4, 0x9C, 0x0A, 0x96, 0xC6, 0xDF, 0xB4, 0x81, 0x27, 0xA1, 0x7D, 0x5B, 0x18, 0xD3, 0xE1, 0xBA, 0x72, 0x05, 0x2F, 0xDE, 0x9B, 0x38, 0xC6, 0x60, 0xC4, 0x76, 0x1D, 0x3D, 0x66, 0x20, 0x36, 0x2F, 0x5D, 0xC8, 0x95, 0x1D, 0xEB, 0xC5, 0xCC, 0x57, 0xF2, 0xE5, 0xBB, 0x9D, 0x0D, 0x7F, 0x0E, 0x1B, 0x3A, 0xCE, 0xE9, 0xB5, 0x91, 0x55, 0x6F, 0x46, 0x9D, 0xBA, 0x0E, 0x44, 0x36, 0x7B, 0x66, 0xAB, 0x99, 0x63, 0xFB, 0xE6, 0x99, 0xDC, 0xF1, 0x76, 0xF3, 0x2E, 0xDA, 0xE9, 0xB7, 0xD5, 0x31, 0xC2, 0x5B, 0x07, 0x5F, 0x36, 0xC5, 0xA5, 0xAF, 0xE4, 0x34, 0x4B, 0x31, 0xB7, 0xE7, 0xFC, 0x39, 0x74, 0x4A, 0xD2, 0xAF, 0xF2, 0xA9, 0x6E, 0x9D, 0x0C, 0x76, 0x9F, 0x68, 0xB6, 0xB7, 0xFD, 0xE2, 0x5D, 0x10, 0x98, 0xF0, 0xB7, 0xE8, 0x90, 0xD7, 0x1C, 0xE5, 0x3C, 0xA9, 0x2A, 0xEA, 0xF3, 0xF4, 0x6E, 0xEF, 0xFE, 0x1C, 0xFC, 0x58, 0xC3, 0xE7, 0xD3, 0xCF, 0x6C, 0x7F, 0x7A, 0xE3, 0xFC, 0xEB, 0x1A, 0xF1, 0xF2, 0xFF, 0x0F, 0x60, 0x80, 0x02, 0x0E, 0x48, 0x60, 0x81, 0x06, 0x1E, 0x88, 0x60, 0x82, 0x0A, 0x2E, 0xC8, 0x60, 0x83, 0x0E, 0x3E, 0xE8, 0x42, 0x01, 0x00, 0x3B };

const PROGMEM unsigned int notreallypoker_IconShare_BinarySize = 389;
const PROGMEM char notreallypoker_IconShare_BinaryImage[] = { 0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x80, 0x00, 0x80, 0x00, 0x80, 0x01, 0x00, 0x52, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x21, 0xF9, 0x04, 0x01, 0x0A, 0x00, 0x01, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x02, 0xFE, 0x8C, 0x8F, 0xA9, 0xCB, 0xED, 0x0F, 0xA3, 0x9C, 0xB4, 0xDA, 0x8B, 0xB3, 0xDE, 0xBC, 0xFB, 0x0F, 0x86, 0xE2, 0x48, 0x96, 0xE6, 0x89, 0xA6, 0xEA, 0xCA, 0xB6, 0xEE, 0x0B, 0xC7, 0xF2, 0x4C, 0xD7, 0xF6, 0x8D, 0xE7, 0xFA, 0xCE, 0xF7, 0xFE, 0x0F, 0x0C, 0x0A, 0x87, 0xC4, 0xA2, 0xF1, 0x88, 0x4C, 0x2A, 0x45, 0x80, 0xA6, 0xF3, 0xB9, 0x8C, 0x3D, 0xA7, 0xD3, 0x68, 0x8B, 0x8A, 0x75, 0x5A, 0x55, 0xD9, 0x2E, 0x60, 0x7B, 0xF2, 0x7A, 0xC1, 0x24, 0xB1, 0x98, 0x1C, 0x32, 0x9B, 0xD1, 0x1F, 0xF5, 0x99, 0xCD, 0x71, 0xAF, 0xE1, 0x1A, 0xF9, 0x9B, 0x8E, 0xB1, 0x8F, 0xF1, 0x79, 0x7D, 0x96, 0xDF, 0xE7, 0x47, 0x05, 0x78, 0x21, 0x88, 0x45, 0x68, 0x61, 0x38, 0x88, 0x28, 0xA1, 0x78, 0xC8, 0xF8, 0xE0, 0xF8, 0x07, 0xC9, 0x20, 0xD9, 0x45, 0xB9, 0x60, 0x39, 0x89, 0x79, 0xA0, 0x79, 0xC9, 0x19, 0xE0, 0xF9, 0x89, 0x29, 0x3A, 0x4A, 0x59, 0xBA, 0x09, 0x89, 0x9A, 0x8A, 0xE8, 0x68, 0xE0, 0x76, 0xAA, 0xA8, 0xB0, 0xA7, 0x6A, 0x08, 0xDA, 0x68, 0x7B, 0x0B, 0xE1, 0xAA, 0xEB, 0xC0, 0xDB, 0xDB, 0x20, 0x0B, 0x1C, 0x9C, 0x5B, 0xCB, 0x1A, 0x2A, 0xCC, 0x08, 0x8B, 0x5C, 0xAC, 0xBC, 0xBA, 0x18, 0xFB, 0xAC, 0xC5, 0x29, 0x0D, 0x45, 0x5D, 0xFD, 0x05, 0x8A, 0xDD, 0x2B, 0x0D, 0xDC, 0xED, 0x8D, 0x3A, 0xFC, 0x2A, 0x2A, 0xDE, 0xA9, 0x59, 0x8E, 0xE0, 0x89, 0x6E, 0x6E, 0xB9, 0x3E, 0xDE, 0xEE, 0x5E, 0xBA, 0xBE, 0x5A, 0xFE, 0x0D, 0x4E, 0x7F, 0xFF, 0x9C, 0xAF, 0xAF, 0x8B, 0xDD, 0xD4, 0xEF, 0x0F, 0x60, 0x40, 0x6D, 0x6A, 0xDE, 0x09, 0xBA, 0x65, 0x8A, 0xDD, 0x41, 0x77, 0xB3, 0x9A, 0x31, 0x54, 0xA8, 0xE7, 0x61, 0x82, 0x5F, 0x12, 0x99, 0x2D, 0xAC, 0x68, 0x31, 0x22, 0x46, 0x5D, 0x83, 0x1A, 0x31, 0x52, 0x84, 0x68, 0xED, 0x5A, 0xAE, 0x65, 0x22, 0xB7, 0x21, 0x1C, 0x48, 0xD0, 0xE4, 0xC9, 0x6A, 0xFB, 0xC2, 0xB5, 0x54, 0x37, 0xCC, 0xDE, 0x4B, 0x49, 0xF3, 0xC8, 0xC5, 0x3B, 0x77, 0x13, 0x5E, 0x4D, 0x9D, 0xE8, 0x60, 0xEE, 0xA4, 0x99, 0x13, 0xE8, 0xCF, 0x8F, 0xF5, 0x84, 0x06, 0x75, 0x38, 0xB4, 0xA3, 0x44, 0xA4, 0x0F, 0xFD, 0x6C, 0x4C, 0x27, 0xE7, 0xE9, 0xC4, 0x82, 0x52, 0x1B, 0x1E, 0xAB, 0x8A, 0x35, 0xAB, 0xD6, 0xAD, 0x5C, 0xBB, 0x7A, 0xFD, 0x0A, 0x36, 0xAC, 0xD8, 0xB1, 0x64, 0xCB, 0x9A, 0x3D, 0x8B, 0x36, 0xAD, 0xDA, 0x25, 0x05, 0x00, 0x00, 0x3B };